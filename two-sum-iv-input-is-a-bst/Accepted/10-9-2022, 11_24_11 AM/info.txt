{"id":818400291,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1665293051,"status":10,"status_display":"Accepted","runtime":"57 ms","url":"/submissions/detail/818400291/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"36.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    void recurse(TreeNode * root, vector<int>&numbers){\n        if(root == NULL) return;\n        recurse(root->left, numbers);\n        numbers.push_back(root->val);\n        recurse(root->right, numbers);\n    }\n\n    bool findTarget(TreeNode* root, int k) {\n        vector<int>numbers;\n        recurse(root, numbers);\n        int left = 0, right = size(numbers) - 1;\n        while(left < right){\n            int sum = numbers[left] + numbers[right];\n            if(sum == k) return true;\n            if(sum < k) left++;\n            else right--;\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum-iv-input-is-a-bst","has_notes":false,"notes":"","topic_tags":[]}