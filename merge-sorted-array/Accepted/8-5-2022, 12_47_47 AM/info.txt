{"id":765297835,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1659638867,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/765297835/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"9.1 MB","code":"class Solution {\npublic:\n    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {\n        int maxVal = INT_MIN;\n        for(int i=0; i<m; i++) maxVal = max(maxVal, nums1[i]);\n        for(int i=0; i<n; i++) maxVal = max(maxVal, nums2[i]);\n        int mid = m-1, nid = n-1;\n        int sz = size(nums1) - 1;\n        while(sz >= 0){\n            // cout<<mid<<' '<<nid<<endl;\n            if(mid<0 || (nid>=0 && nums1[mid]<=nums2[nid])){\n                swap(nums1[sz--], nums2[nid--]);\n            }\n            else{\n                swap(nums1[sz--], nums1[mid--]);\n            }\n        }\n    }\n};\n\n// ","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"merge-sorted-array","has_notes":false,"notes":"","topic_tags":[]}