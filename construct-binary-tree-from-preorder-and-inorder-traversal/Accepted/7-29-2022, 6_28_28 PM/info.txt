{"id":759841719,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1659097708,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/759841719/","is_pending":"Not Pending","title":"Construct Binary Tree from Preorder and Inorder Traversal","memory":"26.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode* helper(int preI, int preJ, vector<int>&pre,int inI,int inJ, vector<int>&in, unordered_map<int,int>&mp)\n    {\n       if(preI>preJ || inI > inJ) return NULL;\n       TreeNode* root = new TreeNode(pre[preI]);\n       int leftCount = mp[pre[preI]]-inI;\n       root->left = helper(preI+1,preI+leftCount,pre,inI,inI+leftCount-1,in, mp);\n       root->right = helper(preI+leftCount+1,preJ,pre,mp[pre[preI]]+1,inJ,in, mp);\n       return root;\n    }\n    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {\n        int m = preorder.size(), n = inorder.size();\n        unordered_map<int,int>mp;\n        for( int i = 0 ; i < m; i++) mp[inorder[i]] = i;\n        return helper(0, m-1,preorder,0, n-1, inorder, mp);\n        \n    }\n};\n\n    /*  //inorder = left -> root -> right\n        //preorder= root -> left -> right\n        Input: preorder = [3,  9,8,10  20,15,7], inorder = [8,9,10,3,15,20,7]\n  \n step -1:\n           Inorder\n    [left]  [root]    [right]\n    8,9,10     3       15,20,7\n            \n            \n           Preorder\n    [left]  [root]    [right]\n    9,8,10     3       20,15,7\n            \n\n step -2:\n                Inorder\n    [left]       [root]      [right]\n[l] [root]   [r]          [l] [root]   [r] \n8     9    10      3       15   20       7     \n            \n            \n           Preorder\n    [left]       [root]      [right]\n[l] [root]   [r]          [l] [root]   [r] \n9     8    10      3       20   15       7 \n                    \n                    \n                 3\n               /   \\\n              9    20         \n            / \\    / \\\n          8   10  15  7 */\n        \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-preorder-and-inorder-traversal","has_notes":false,"notes":"","topic_tags":[]}