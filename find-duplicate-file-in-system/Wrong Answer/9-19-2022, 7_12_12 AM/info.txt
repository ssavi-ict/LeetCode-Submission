{"id":803289045,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1663549932,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/803289045/","is_pending":"Not Pending","title":"Find Duplicate File in System","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<string>> findDuplicate(vector<string>& paths) {\n        int n = size(paths);\n        unordered_map<string, vector<string>>umap;\n        \n        for(int i=0; i<n; i++){\n            stringstream ss(paths[i]);\n            string part, base_path = \"\";\n            bool base = 0;\n            while(ss >> part){\n                if(base == 0){\n                    base_path += part;\n                }\n                else{\n                    int dir_length = size(part);\n                    string file_name = \"\", file_content = \"\";\n                    bool in_content = false;\n                        \n                    for(int j=0; j<dir_length; j++){\n                        if(part[j] != '(' && !in_content){\n                            file_name += part[j];\n                        }\n                        else if(part[j] == '(' || part[j] == ')') in_content = true;\n                        else file_content += part[j];\n                    }\n                    file_name = base_path + \"/\" + file_name;\n                    // cout<<file_name<<endl;\n                    umap[file_content].push_back(file_name);\n                }\n                base = 1;\n            }\n        }\n        \n        vector<vector<string>>ans;\n        for(auto it = umap.begin(); it!=umap.end(); ++it){\n            ans.push_back(it->second);\n        }\n        return ans;\n    }\n};","compare_result":"11000011111111111111111111111111111110111111111111111111011001001000000000000000010000000000000100000000000000000000001010000000000100001010000100000000001000110","title_slug":"find-duplicate-file-in-system","has_notes":false,"notes":"","topic_tags":[]}