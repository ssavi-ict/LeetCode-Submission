{"id":745707325,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1657682243,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/745707325/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"15 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void solve(TreeNode * root, int lvl, vector<vector<int>> &ans, int & mxlvl){\n        if(!root) return;\n        mxlvl = max(lvl, mxlvl);\n        ans[lvl].push_back(root->val);\n        solve(root->left, lvl+1, ans, mxlvl);\n        solve(root->right, lvl+1, ans, mxlvl);\n    }\n    \n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> ans(2001);\n        int mx = -1;\n        solve(root, 0, ans, mx);\n        if(mx == -1) \n            ans.resize(0);\n        else\n            ans.resize(mx+1);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"notes":"","topic_tags":[]}