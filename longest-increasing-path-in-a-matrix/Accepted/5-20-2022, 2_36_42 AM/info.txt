{"id":703004088,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1652992602,"status":10,"status_display":"Accepted","runtime":"51 ms","url":"/submissions/detail/703004088/","is_pending":"Not Pending","title":"Longest Increasing Path in a Matrix","memory":"14.8 MB","code":"class Solution {\npublic:\n    \n    int dx4[4] = {0, 1, 0, -1};\n    int dy4[4] = {1, 0, -1, 0};\n    int table[201][201];\n    int n, m;\n    \n    int solve(int u, int v, int m, int n, vector<vector<int>>& matrix){\n        if(u<0 || u>=m || v<0 || v>=n) return 0;\n        if(table[u][v]!=0) return table[u][v];\n        // cout<<\"J\"<<endl;\n        int ans = 0;\n        for(int i=0; i<4; i++){\n            int x = u + dx4[i];\n            int y = v + dy4[i];\n            if(x>=0 && x<m && y>=0 && y<n && (matrix[x][y] > matrix[u][v])){\n                ans = max(ans, solve(x, y, m, n, matrix));\n            }\n        }\n        table[u][v] = ans + 1;\n        return table[u][v];\n    }\n    \n    int longestIncreasingPath(vector<vector<int>>& matrix) {\n        m = matrix.size(), n = matrix[0].size();\n        \n        int ans = 1;\n        for(int i=0; i<m; i++){\n            for(int j=0; j<n; j++){\n                if(table[i][j]==0){\n                    ans = max(ans, solve(i, j, m, n, matrix));\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-path-in-a-matrix","has_notes":false,"notes":"","topic_tags":[]}