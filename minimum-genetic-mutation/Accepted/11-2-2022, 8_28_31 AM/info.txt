{"id":835071837,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1667356111,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/835071837/","is_pending":"Not Pending","title":"Minimum Genetic Mutation","memory":"6.5 MB","code":"class Solution {\npublic:\n\n    bool distance(string & a, string & b, int len){\n        int counter = 0;\n        for(int i=0; i<len; i++){\n            if(a[i]!=b[i]) counter++;\n        }\n        return counter == 1;\n    }\n    int minMutation(string start, string end, vector<string>& bank) {\n        unordered_map<string, bool>visited;\n        int steps = 0, bank_size = bank.size();\n        queue<string>myQ;\n        myQ.push(start);\n        visited[start] = true;\n        while(!myQ.empty()){\n            int sz = myQ.size();\n            while(sz--){\n                auto top = myQ.front();\n                myQ.pop();\n                if(top == end) return steps;\n                for(int i=0; i<bank_size; i++){\n                    if(!visited[bank[i]] && distance(top, bank[i], 8)){\n                        visited[bank[i]] = true;\n                        myQ.push(bank[i]);\n                    }\n                }\n            }\n            steps++;\n        }\n        return -1;\n    }\n};","compare_result":"111111111111111","title_slug":"minimum-genetic-mutation","has_notes":false,"notes":"","topic_tags":[]}