{"id":834184441,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1667240138,"status":10,"status_display":"Accepted","runtime":"157 ms","url":"/submissions/detail/834184441/","is_pending":"Not Pending","title":"Shortest Path in a Grid with Obstacles Elimination","memory":"16.7 MB","code":"class Solution {\npublic:\n\n    struct info{\n        int u, v, rem;\n    };\n\n    int dx[4] = {0, 0, 1, -1};\n    int dy[4] = {1, -1, 0, 0};\n\n    bool isValid(int u, int v, int m, int n){\n        return (u>=0 && u<m && v>=0 && v<n);\n    }\n    \n    int shortestPath(vector<vector<int>>& grid, int k) {\n        int m = grid.size(), n = grid[0].size();\n        // if(k >= m + n) return m + n;\n        vector<vector<vector<bool>>>visited(m+1, vector<vector<bool>>(n+1, vector<bool>(k+1, false)));\n        queue<info>myQ;\n        myQ.push({0,0,k});\n        visited[0][0][k] = true;\n        int counter = 0;\n\n        while(!myQ.empty()){\n            int q_size = myQ.size();\n            while(q_size--){\n                auto top = myQ.front();\n                int u = top.u, v = top.v, rem = top.rem;\n                if(u == m-1 && v==n-1) return counter;\n                myQ.pop();\n                for(int i=0; i<4; i++){\n                    int x = u + dx[i];\n                    int y = v + dy[i];\n                    if(!isValid(x,y,m,n)) continue;\n                    if(grid[x][y] == 0 && !visited[x][y][rem]){\n                        visited[x][y][rem] = true;\n                        myQ.push({x,y,rem});\n                    }\n                    if(grid[x][y] == 1 && rem>0 && !visited[x][y][rem-1]){\n                        visited[x][y][rem-1] = true;\n                        myQ.push({x,y,rem-1});\n                    }\n                }\n            }\n            counter++;\n        }\n        return -1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-in-a-grid-with-obstacles-elimination","has_notes":false,"notes":"","topic_tags":[]}