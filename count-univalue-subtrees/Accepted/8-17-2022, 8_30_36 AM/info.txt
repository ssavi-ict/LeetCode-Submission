{"id":775671300,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1660703436,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/775671300/","is_pending":"Not Pending","title":"Count Univalue Subtrees","memory":"16.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int cnt;\n\n    void solve(TreeNode * root){\n        if(!root) return;\n        if(!root->left && !root->right){\n            cnt++;\n        }\n        else{\n            solve(root->left);\n            solve(root->right);\n            if(root->left && root->val == root->left->val){\n                if(!root->right || (root->right && root->val == root->right->val)){\n                    cnt++;\n                }\n                else if(root->right && (root->right && root->val != root->right->val)){\n                    root->val = INT_MAX;\n                }\n            }\n            else if(root->right && root->val == root->right->val){\n                if(!root->left || (root->left && root->val == root->left->val)){\n                    cnt++;\n                }\n                else if(root->left && (root->left && root->val != root->left->val)){\n                    root->val = INT_MAX;\n                }\n            }\n            else{\n                if(root->left){\n                    root->val = INT_MAX;;\n                }\n                if(root->right){\n                    root->val = INT_MAX;;\n                }\n            }\n        }\n    }\n\n    int countUnivalSubtrees(TreeNode* root) {\n        cnt = 0;\n        solve(root);\n        return cnt;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-univalue-subtrees","has_notes":false,"notes":"","topic_tags":[]}