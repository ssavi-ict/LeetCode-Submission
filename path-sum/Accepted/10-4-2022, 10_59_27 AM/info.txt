{"id":814747002,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1664859567,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/814747002/","is_pending":"Not Pending","title":"Path Sum","memory":"21.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool solve(TreeNode * root, int targetSum){\n        if(targetSum-root->val == 0 && root->left==NULL && root->right==NULL) return true;\n        bool ret = false;\n        if(root->left){\n            ret = ret or solve(root->left, targetSum - root->val);\n        }\n        if(root->right){\n            ret = ret or solve(root->right, targetSum - root->val);\n        }\n        return ret;\n    }\n    bool hasPathSum(TreeNode* root, int targetSum) {\n        if(!root) return false;\n        return solve(root, targetSum);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum","has_notes":false,"notes":"","topic_tags":[]}