{"id":720064099,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1654998416,"status":10,"status_display":"Accepted","runtime":"211 ms","url":"/submissions/detail/720064099/","is_pending":"Not Pending","title":"Maximum Erasure Value","memory":"89.2 MB","code":"class Solution {\npublic:\n    int count[10001];\n    int maximumUniqueSubarray(vector<int>& nums) {\n        int left = 0, right = 0, ans = 0, sum = 0;\n        while(right < nums.size()){\n            count[nums[right]]++;\n            sum = sum + nums[right];\n            // cout<<\"j\"<<endl;\n            while(count[nums[right]] > 1){\n                sum = sum - nums[left];\n                count[nums[left]]--;\n                left++;\n            }\n            ans = max(ans, sum);\n            right++;\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-erasure-value","has_notes":false,"notes":"","topic_tags":[]}