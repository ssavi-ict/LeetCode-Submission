{"id":709160066,"lang":"cpp","lang_name":"C++","time":"6 months, 4 weeks","timestamp":1653756392,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/709160066/","is_pending":"Not Pending","title":"Number of Islands II","memory":"N/A","code":"class Solution {\npublic:\n    const int fx[4] = {+1, -1, +0, +0};\n    const int fy[4] = {+0, +0, +1, -1};\n    \n    void init(int numOfNodes, vector<int> &par)\n    {\n        for(int i=1 ; i<=numOfNodes ; i++)\n            par[i] = i;\n    }\n    \n    int findPar(int u, vector<int> &par)\n    {\n        if(par[u] == u)\n            return u;\n        return par[u] = findPar(par[u], par);\n    }\n    \n    void makeSet(int u, int v, vector<int> &par)\n    {\n        u = findPar(u, par);\n        v = findPar(v, par);\n        if(u != v){\n            par[u] = v;\n        }\n    }\n\n    vector<int> numIslands2(int m, int n, vector<vector<int>>& positions) {\n        int numOfNodes = m*n, cnt = 0;\n        vector<int> par(numOfNodes+5, 0), isLand(numOfNodes+5, 0), ans;\n        \n        init(numOfNodes, par);\n        \n        for(auto pos : positions) {\n            int u = (pos[0]*n) + (pos[1]+1);\n            set<int> prevLands;\n            \n            for(int k=0 ; k<4 ; k++) {\n                int nx = pos[0] + fx[k];\n                int ny = pos[1] + fy[k];\n                \n                if(nx < 0 || nx >= m || ny < 0 || ny >= n)\n                    continue;\n                \n                int v = (nx*n)+(ny+1);\n                \n                if(isLand[v])\n                    prevLands.insert(findPar(v, par));\n            }\n\n            isLand[u] = 1;\n            for(int k=0 ; k<4 ; k++) {\n                int nx = pos[0] + fx[k];\n                int ny = pos[1] + fy[k];\n                \n                if(nx < 0 || nx >= m || ny < 0 || ny >= n)\n                    continue;\n                \n                int v = (nx*n)+(ny+1);\n                \n                if(isLand[v])\n                    makeSet(u, v, par);\n            }\n\n            if(prevLands.empty()) {\n                cnt++;\n            }\n            else {\n                cnt += (1-prevLands.size());\n            }\n            ans.push_back(cnt);\n        }\n        return ans;\n    }\n};","compare_result":"111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-islands-ii","has_notes":false,"notes":"","topic_tags":[]}