{"id":815949759,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1664994901,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/815949759/","is_pending":"Not Pending","title":"Add One Row to Tree","memory":"24.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n\n    void solve(TreeNode * root, int val, int depth, int direction, TreeNode * pre){\n        if(depth == 1){\n            TreeNode * newNode = new TreeNode(val);\n            if(direction == 1){\n                newNode->left = root;\n                pre->left = newNode;\n            }\n            if(direction == 2){\n                newNode->right = root;\n                pre->right = newNode;\n            }\n            return;\n        }\n        if(!root) return;\n        solve(root->left, val, depth-1, 1, root);\n        solve(root->right, val, depth-1, 2, root);\n    }\n\n    TreeNode* addOneRow(TreeNode* root, int val, int depth) {\n        if(depth == 1){\n            TreeNode * newRoot = new TreeNode(val);\n            newRoot->left = root;\n            return newRoot;\n        }\n        solve(root, val, depth, 0, root);\n        return root;\n    }\n};\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"add-one-row-to-tree","has_notes":false,"notes":"","topic_tags":[]}