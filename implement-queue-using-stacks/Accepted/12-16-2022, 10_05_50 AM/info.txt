{"id":860478912,"lang":"cpp","lang_name":"C++","time":"1 week, 1 day","timestamp":1671163550,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/860478912/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"7.1 MB","code":"class MyQueue {\npublic:\n\n    stack<int>base, reverse;\n    MyQueue() {\n        \n    }\n    \n    void push(int x) {\n        base.push(x);\n    }\n\n    void insert_on_reverse(){\n        while(!base.empty()){\n            reverse.push(base.top());\n            base.pop();\n        }\n    }\n    \n    int pop() {\n        if(reverse.empty()){\n            insert_on_reverse();\n        }\n        int top = reverse.top();\n        reverse.pop();\n        return top;\n    }\n    \n    int peek() {\n        if(reverse.empty()){\n            insert_on_reverse();\n        }\n        return reverse.top();\n    }\n    \n    bool empty() {\n        return (base.empty() && reverse.empty());\n    }\n};\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue* obj = new MyQueue();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->peek();\n * bool param_4 = obj->empty();\n */","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false,"notes":"","topic_tags":[]}