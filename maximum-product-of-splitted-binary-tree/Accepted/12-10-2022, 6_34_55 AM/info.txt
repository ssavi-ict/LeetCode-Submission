{"id":857345757,"lang":"cpp","lang_name":"C++","time":"2Â weeks","timestamp":1670632495,"status":10,"status_display":"Accepted","runtime":"283 ms","url":"/submissions/detail/857345757/","is_pending":"Not Pending","title":"Maximum Product of Splitted Binary Tree","memory":"93.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    const int MOD = 1e9 + 7;\n\n    int solve(TreeNode * root, vector<int> & sums){\n        if(!root) return 0;\n        int left = solve(root->left, sums);\n        int right = solve(root->right, sums);\n        if(left > 0) sums.push_back(left);\n        if(right > 0) sums.push_back(right);\n        if((left + right + root->val) > 0)sums.push_back(left + right + root->val);\n        return (left + right + root->val); \n    }\n\n    int maxProduct(TreeNode* root) {\n        vector<int>sums;\n        int total = solve(root, sums);\n        long long maxVal = 0;\n        for(int i=0; i<sums.size(); i++){\n            long long newVal = (long long) sums[i] * (long long)(total - sums[i]);\n            maxVal = max(maxVal, newVal);\n        }\n        return maxVal % MOD;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-of-splitted-binary-tree","has_notes":false,"notes":"","topic_tags":[]}