{"id":816267887,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1665034775,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/816267887/","is_pending":"Not Pending","title":"Time Based Key-Value Store","memory":"N/A","code":"class TimeMap {\npublic:\n\n    unordered_map<string, vector<int>>umap_key;\n    unordered_map<string, vector<string>>umap_value;\n\n    TimeMap() {\n        \n    }\n    \n    void set(string key, string value, int timestamp) {\n        umap_key[key].push_back(timestamp);\n        umap_value[key].push_back(value);\n    }\n    \n    string get(string key, int timestamp) {\n        int ub_id = upper_bound(umap_key[key].begin(), umap_key[key].end(), timestamp) - umap_key[key].begin();\n        if(ub_id == 0){\n            if(umap_key[key][ub_id] > timestamp) return \"\";\n        }\n        else ub_id--;\n        return umap_value[key][ub_id];\n    }\n};\n\n/**\n * Your TimeMap object will be instantiated and called as such:\n * TimeMap* obj = new TimeMap();\n * obj->set(key,value,timestamp);\n * string param_2 = obj->get(key,timestamp);\n */","compare_result":"111111111111111111111111111111111111111111111100","title_slug":"time-based-key-value-store","has_notes":false,"notes":"","topic_tags":[]}