{"id":844093756,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1668539123,"status":10,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/844093756/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"30.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int getDepth(TreeNode * root){\n        int depth = 0;\n        while(root->left){\n            depth++; root = root->left;\n        }\n        return depth;\n    }\n\n    bool checkMidNodeOnLastLevel(TreeNode * root, int midLeaf, int depth){\n        int left = 1, right = (1 << depth);\n        while(depth--){\n            int mid = left + ((right - left) >> 1);\n            if(midLeaf >= mid){\n                left = mid + 1;\n                root = root->right;\n            }\n            else{\n                right = mid - 1;\n                root = root->left;\n            }\n        }\n        return root != NULL;\n    }\n\n    int countNodes(TreeNode* root) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        if(!root) return 0;\n        int depth = getDepth(root);\n        if(depth == 0) return 1;\n        \n        int plevel_node = (1 << depth) - 1;\n        int leftLeaf = 1, rightLeaf = (1<<depth) - 1;\n        while(leftLeaf <= rightLeaf){\n            int midLeaf = leftLeaf + ((rightLeaf - leftLeaf) >> 1);\n            if(checkMidNodeOnLastLevel(root, midLeaf, depth)) leftLeaf = midLeaf + 1;\n            else rightLeaf = midLeaf - 1;\n        }\n        return plevel_node + leftLeaf;\n    }\n};","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes","has_notes":false,"notes":"","topic_tags":[]}