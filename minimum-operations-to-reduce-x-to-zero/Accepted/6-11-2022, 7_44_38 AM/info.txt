{"id":719253623,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1654911878,"status":10,"status_display":"Accepted","runtime":"276 ms","url":"/submissions/detail/719253623/","is_pending":"Not Pending","title":"Minimum Operations to Reduce X to Zero","memory":"99.2 MB","code":"class Solution {\npublic:\n    int minOperations(vector<int>& nums, int x) {\n        int len = nums.size();\n        int fSum[len+1], bSum[len+1];\n        fSum[0] = nums[0], bSum[len-1] = nums[len-1];\n        \n        int front = (fSum[0] == x)?1:-1;\n        int back = (bSum[len-1] == x)?1:-1;\n        \n        for(int i=1; i<len; i++){\n            fSum[i] = fSum[i-1] + nums[i];\n            bSum[len-i-1] = bSum[len-i] + nums[len-i-1];\n            if (fSum[i] == x) front = i + 1;\n            if (bSum[len-i-1] == x) back = i + 1;\n        }\n        \n        int ans = len + 1;\n        if (front != -1) ans = min(ans, front);\n        if (back != -1) ans = min(ans, back);\n        \n        for(int i=len-1; i>=0; i--){\n            int key = x - bSum[i];\n            if(key<=0) break;\n            \n            int lo = 0, hi = len-1, ret = -1;\n            // cout<<key<<endl;\n            while(lo<=hi){\n                int mid = lo + (hi - lo)/2;\n                if(fSum[mid] == key){\n                    ret = (mid+1) + (len-i) ;\n                    break;\n                }\n                if(key < fSum[mid]) hi = mid - 1;\n                else lo = mid + 1;\n            }\n            // cout<<ret<<endl;\n            if(ret!=-1){\n                ans = min(ans, ret);\n            }\n        }\n        return ans==len+1?-1:ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-operations-to-reduce-x-to-zero","has_notes":false,"notes":"","topic_tags":[]}