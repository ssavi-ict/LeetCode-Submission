{"id":734711997,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1656557031,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/734711997/","is_pending":"Not Pending","title":"Minimum Moves to Equal Array Elements II","memory":"N/A","code":"class Solution {\npublic:\n    \n    int minMoves2(vector<int>& nums) {\n        int n = nums.size();\n        sort(nums.begin(), nums.end());\n        long long cum[n+1];\n        cum[0] = nums[0];\n        \n        for(int i=1; i<n; i++){\n            cum[i] = cum[i-1] + nums[i];\n        }\n        \n        long long sum = cum[n-1];\n        long long ans = INT_MAX;\n        \n        for(int i=0; i<n; i++){\n            if(i==0){\n                ans = min(ans, (cum[n-1] - cum[i]) - (n-1-i)*nums[i]);\n            }\n            else if(i == n-1){\n                ans = min(ans, nums[i]*(i)-cum[i-1]);\n            }\n            else{\n                long long left = nums[i]*(i)-cum[i-1];\n                long long right = (cum[n-1] - cum[i]) - (n-1-i)*nums[i];\n                ans = min(ans, left+right);\n            }\n        }\n        \n        long long avgSum = 0;\n        for(int i=0; i<n; i++){\n            avgSum += abs(nums[i] - (cum[n-1])/n);\n        }\n        return min(ans, avgSum);\n    }\n};","compare_result":"111111111111111111000000000000","title_slug":"minimum-moves-to-equal-array-elements-ii","has_notes":false,"notes":"","topic_tags":[]}