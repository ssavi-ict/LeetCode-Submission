{"id":823180590,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1665859560,"status":10,"status_display":"Accepted","runtime":"2511 ms","url":"/submissions/detail/823180590/","is_pending":"Not Pending","title":"String Compression II","memory":"114.7 MB","code":"int dp[101][27][101][101];\n\nclass Solution {\npublic:\n    int solve(int pos, string & s, int k, int len, int ch){\n        // cout<<pos<<' '<<k<<' '<<len<<' '<<ch<<endl;\n        if(k < 0) return 101;\n        if(pos >= s.size()) return 0;\n        \n        // if(k==0) return 0;\n        if(dp[pos][ch][len][k] != -1) return dp[pos][ch][len][k];\n        \n        \n        int ret = 101;\n        int int_ch = s[pos] - 'a';\n        \n        // cout<<\"a \"<<pos<<' '<<k<<' '<<len<<' '<<ch<<endl;\n        \n        if(ch == int_ch){\n            int sentinel = (len == 1) || (len == 9) || (len == 99);\n            ret = min(ret, sentinel + solve(pos+1, s, k, len+1, ch));\n        }\n        else{\n            ret = min(ret, 1 + solve(pos+1, s, k, 1, int_ch));\n            ret = min(ret, solve(pos+1, s, k-1, len, ch));\n        }\n        return (dp[pos][ch][len][k] = ret);\n    }\n    \n    int getLengthOfOptimalCompression(string s, int k) {\n        // int n = s.size();\n        memset(dp, -1, sizeof(dp));\n        // vector<vector<vector<vector<int>>>>dp(n+1, vector<vector<vector<int>>>(27, vector<vector<int>>(n+1, vector<int>(k+1, -1))));\n        return solve(0, s, k, 0, 26);\n    }\n};\n\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"string-compression-ii","has_notes":false,"notes":"","topic_tags":[]}