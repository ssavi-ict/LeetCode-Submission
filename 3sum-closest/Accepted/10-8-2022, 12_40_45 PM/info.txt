{"id":817684214,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1665211245,"status":10,"status_display":"Accepted","runtime":"2816 ms","url":"/submissions/detail/817684214/","is_pending":"Not Pending","title":"3Sum Closest","memory":"16.4 MB","code":"class Solution {\npublic:\n    int threeSumClosest(vector<int>& nums, int target) {\n        sort(nums.begin(), nums.end());  // -4, -1, 1, 2\n\n        int n = nums.size();\n        int ans = -10000001;\n\n        for(int i=0; i<n-2; i++){ // -4\n            for(int j=i+1; j<n-1; j++){ // -1, 1, 2\n                int lo = j + 1, hi = n - 1;  // 2, 3\n                int two_sum = nums[i] + nums[j]; // -5\n                int key = target - two_sum;  // 6\n                while(lo < hi){\n                    int mid = (lo + hi)/2;\n                    if(nums[mid] == key) return target; // 1\n                    if(key > nums[mid]) lo = mid + 1; // 3\n                    else hi = mid - 1;\n                }\n                if(lo - 1 == j) lo++;\n                int value_three = nums[lo-1]; // 1\n                if(lo < n){\n                    int distance_right = nums[lo] - key; // -4\n                    int distance_left = key - nums[lo - 1]; // 6 - 1 = 5\n                    if(distance_left > distance_right){\n                        value_three = nums[lo];\n                    }\n                }\n                // cout<<nums[i]<<' '<<nums[j]<<' '<<value_three<<endl;\n                int sum_three = two_sum + value_three;\n                \n                if(abs(target - sum_three) < abs(target - ans)){\n                    ans = sum_three;\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum-closest","has_notes":false,"notes":"","topic_tags":[]}