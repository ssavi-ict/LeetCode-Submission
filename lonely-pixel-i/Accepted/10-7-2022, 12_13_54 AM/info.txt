{"id":816681918,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1665080034,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/816681918/","is_pending":"Not Pending","title":"Lonely Pixel I","memory":"16.7 MB","code":"class Solution {\npublic:\n    int findLonelyPixel(vector<vector<char>>& picture) {\n        int m = picture.size();\n        int n = picture[0].size();\n        vector<int>black_row(m+1, 0);\n        vector<int>black_column(n+1, 0);\n        int ans = 0;\n\n        for(int i=0; i<m; i++){\n            for(int j=0; j<n; j++){\n                if(picture[i][j] == 'B') black_row[i]++;\n            }\n        }\n        for(int j=0; j<n; j++){\n            for(int i=0; i<m; i++){\n                if(picture[i][j] == 'B') black_column[j]++;\n            }\n        }\n\n        for(int i=0; i<m; i++){\n            for(int j=0; j<n; j++){\n                if(picture[i][j] == 'B'){\n                    if(black_row[i] == 1 && black_column[j] == 1) ans++;\n                }\n            }\n        }\n\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"lonely-pixel-i","has_notes":false,"notes":"","topic_tags":[]}