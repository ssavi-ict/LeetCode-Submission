{"id":676690338,"lang":"cpp","lang_name":"C++","time":"8 months, 2 weeks","timestamp":1649470952,"status":10,"status_display":"Accepted","runtime":"308 ms","url":"/submissions/detail/676690338/","is_pending":"Not Pending","title":"Number of Islands","memory":"64.8 MB","code":"class Solution {\nprivate:\n    int m, n;\nvoid dfs(int x, int y, vector<vector<char>>&grid){\n    grid[x][y] = '2';\n        \n    vector<vector<int>>dirs = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\n    \n    for(auto dir: dirs){\n        int nx = dir[0] + x;\n        int ny = dir[1] + y;\n        if(nx >= 0 && nx < m && ny >= 0 && ny < n && grid[nx][ny] == '1'){\n            dfs(nx, ny, grid);\n        }\n    }\n}\n    \npublic:\n    int numIslands(vector<vector<char>>& grid) {\n        m = grid.size();\n        int cnt = 0;\n        if(m == 0)\n            return cnt;\n        n = grid[0].size();\n        \n        for(int i = 0; i < m; i++){\n            for(int j = 0; j  < n; j++){\n                if(grid[i][j] == '1'){\n                    cnt++;\n                    dfs(i, j , grid);\n                }\n            }\n        }\n        \n        return cnt;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"notes":"","topic_tags":[]}