{"id":700854692,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1652723406,"status":10,"status_display":"Accepted","runtime":"81 ms","url":"/submissions/detail/700854692/","is_pending":"Not Pending","title":"Shortest Path in Binary Matrix","memory":"20.2 MB","code":"class Solution {\npublic:\n    \n    int dx8[8] = {0, 0, -1, 1, 1, -1, 1, -1};\n    int dy8[8] = {1, -1, 0, 0, 1, -1, -1, 1};\n    \n    struct info{\n        int x, y, dis;\n    };\n    info var;\n    \n    int shortestPathBinaryMatrix(vector<vector<int>>& grid) {\n        int n = grid.size();\n        if(grid[0][0] == 1) return -1;\n        \n        queue<info>Q;\n        var.x = var.y = var.dis = 0;\n        Q.push(var);\n        grid[0][0] = 1;\n        int ans = -1;\n        \n        while(!Q.empty()){\n            auto top = Q.front();\n            Q.pop();\n            \n            if(top.x == n-1 && top.y == n-1){\n                ans = top.dis + 1;\n                break;\n            }\n            \n            for(int i=0; i<8; i++){\n                int u = top.x + dx8[i];\n                int v = top.y + dy8[i];\n                if(u>=0 && v>=0 && u<n && v<n && grid[u][v] == 0){\n                    grid[u][v] = 1;\n                    var.x = u, var.y = v, var.dis = top.dis + 1;\n                    Q.push(var);\n                }\n            }\n        }\n        \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-in-binary-matrix","has_notes":false,"notes":"","topic_tags":[]}