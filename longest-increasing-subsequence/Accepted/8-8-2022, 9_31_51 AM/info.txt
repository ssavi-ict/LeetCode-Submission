{"id":768073922,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1659929511,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/768073922/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.4 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int n = nums.size(), lis = 1;\n        \n        vector<int>lisVal;\n        lisVal.push_back(nums[0]);\n        for(int i=1; i<n; i++){\n            int idx = lower_bound(lisVal.begin(), lisVal.end(), nums[i]) - lisVal.begin();\n            if(idx>=lisVal.size()){\n                lis++;\n                lisVal.push_back(nums[i]);\n            }\n            else\n                lisVal[idx] = nums[i];\n        }\n        return lis;\n    }\n};\n\n/*\n\nlisVal = 0, 1, 2, 3 \nlis = 4\n\n*/","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"notes":"","topic_tags":[]}