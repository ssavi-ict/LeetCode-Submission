{"id":847785284,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1669086144,"status":10,"status_display":"Accepted","runtime":"73 ms","url":"/submissions/detail/847785284/","is_pending":"Not Pending","title":"Perfect Squares","memory":"23 MB","code":"class Solution {\npublic:\n    int numSquares(int n) {\n        /*vector<int>perfectSquares;\n        for(int i=1; i<=sqrt(n); i++){\n            perfectSquares.push_back(i*i);\n        }*/\n\n        queue<int>squareQueue;\n        squareQueue.push(n);\n        int steps  = 0, qSize, remaining, current;\n        while(!squareQueue.empty()){\n            qSize = squareQueue.size();\n            while(qSize--){\n                current = squareQueue.front();\n                squareQueue.pop();\n                for(int i=sqrt(current); i>=0; i--){\n                    if(i*i <= current ){\n                        remaining = current - i*i;\n                        if(remaining == 0) return steps + 1;\n                        squareQueue.push(remaining);\n                    }\n                }\n            }\n            steps++;\n        }\n        return steps;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"perfect-squares","has_notes":false,"notes":"","topic_tags":[]}