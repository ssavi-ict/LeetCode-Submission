{"id":833616983,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1667167327,"status":10,"status_display":"Accepted","runtime":"424 ms","url":"/submissions/detail/833616983/","is_pending":"Not Pending","title":"Shortest Path in a Grid with Obstacles Elimination","memory":"25.3 MB","code":"class Solution {\npublic:\n    int shortestPath(vector<vector<int>>& grid, int k) {\n        int m = grid.size();\n        int n = grid[0].size();\n        vector<vector<bool>> visited(m, vector<bool>(n, false));\n        vector<vector<vector<int>>> dp(m, vector<vector<int>>(n, vector<int>(k+1, -1)));\n        int ans = path(grid, k, m-1, n-1,visited, dp);\n        if(ans >= m*n)\n            return -1;\n        return ans;\n    }\n\n    int path(vector<vector<int>>& grid, int k, int r, int c,vector<vector<bool>>& visited, vector<vector<vector<int>>>& dp){\n        int m = grid.size();\n        int n = grid[0].size();\n\n        if(r >= m || c >= n || r < 0 || c < 0 || visited[r][c]){\n            return 1e6;\n        }\n\n        if(dp[r][c][k] != -1){\n            return dp[r][c][k];\n        }\n        \n        if(r == 0 && c == 0){\n            return dp[r][c][k] = 0;\n        }\n\n        if(grid[r][c]){\n            if(k == 0){\n                return dp[r][c][k] = 1e6;\n            }\n            else{\n                k--;\n            }\n        }\n        visited[r][c] = true;\n        int top = 1+path(grid, k, r-1, c,visited, dp);\n        int left = 1+path(grid, k, r, c-1,visited, dp);\n        int down = 1+path(grid, k, r+1, c,visited, dp);\n        int right = 1+path(grid, k, r, c+1,visited, dp);\n        visited[r][c] = false;\n\n        return dp[r][c][k] = min(top, min(left, min(right, down)));\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"shortest-path-in-a-grid-with-obstacles-elimination","has_notes":false,"notes":"","topic_tags":[]}