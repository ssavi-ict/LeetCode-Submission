{"id":663360038,"lang":"cpp","lang_name":"C++","time":"9 months, 1 week","timestamp":1647738354,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/663360038/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"N/A","code":"class Solution {\nprivate:\n    int getDistance(vector<int>a){\n        return (a[0] * a[0] + a[1] * a[1]);\n    }\n    \n    void quickSelect(int l, int r, vector<vector<int>>&points, int k){\n        int pivot = l + random() % (r - l + 1);\n        int indx = l;\n        swap(points[r], points[pivot]);\n        int pivotDist = getDistance(points[r]);\n        \n        for(int i = l; i < r; i++){\n            int dst1 = getDistance(points[i]);\n            if(dst1 < pivotDist){\n                swap(points[i], points[indx++]);\n            }\n        }\n        \n        swap(points[indx], points[r]);\n        \n        int cnt = indx - l + 1;\n        if(cnt == k)\n            return;\n        if(k < cnt)\n            quickSelect(l, indx - 1, points, k);\n        quickSelect(indx + 1, r, points, k - cnt);\n    }\n    \npublic:\n    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {\n        quickSelect(0, points.size() - 1, points, k);\n        vector<vector<int>>result;\n        \n        for(int i = 0; i < k; i++){\n            result.push_back(points[i]);\n        }\n        \n        return result;\n    }\n};","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"k-closest-points-to-origin","has_notes":false,"notes":"","topic_tags":[]}