{"id":794328968,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1662600624,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/794328968/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        TreeNode * current = root;\n        vector<int>ans;\n        while(current){\n            if(current->left == NULL){\n                ans.push_back(current->val);\n                current = current->right;\n            }\n            else{\n                TreeNode * inorder_pred = current->left;\n                while(inorder_pred->right && inorder_pred->right!=current) inorder_pred = inorder_pred->right;\n                if(inorder_pred->right == NULL){\n                    inorder_pred->right = current;\n                    current = current->left;\n                }\n                else{\n                    inorder_pred->right = NULL;\n                    ans.push_back(current->val);\n                    current = current->right;\n                }\n            }\n        }\n        return ans;\n    }\n};\n\n/*\n\nstack = 2, 3\nans = 5, 1, 3 2\n\n*/","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"notes":"","topic_tags":[]}