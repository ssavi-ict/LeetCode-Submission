{"id":773774196,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1660511452,"status":10,"status_display":"Accepted","runtime":"228 ms","url":"/submissions/detail/773774196/","is_pending":"Not Pending","title":"Word Ladder","memory":"16.7 MB","code":"class Solution {\npublic:\n    unordered_map<string, bool>stored;\n    \n    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {\n        int n_words = wordList.size();\n        int word_sz = beginWord.size();\n        for(int i=0; i<n_words; i++){\n            stored[wordList[i]] = true;\n        }\n        \n        if(stored.find(endWord)==stored.end()) return 0;\n        \n        queue<string>myQ;\n        unordered_map<string, int>level;\n        \n        myQ.push(beginWord);\n        int ans = 0;\n        level[beginWord] = 1;\n        while(!myQ.empty()){\n            int q_size = myQ.size();\n            while(q_size--){\n                auto top = myQ.front();\n                myQ.pop();\n                int current_lvl = level[top];\n                \n                for(int i=0; i<word_sz; i++){\n                    char x = top[i];\n                    for(char j='a'; j<='z'; j++){\n                        top[i] = j;\n                        if(stored.find(top)!=stored.end() && level.find(top)==level.end()){\n                            level[top] = current_lvl + 1;\n                            myQ.push(top);\n                            ans = max(ans, current_lvl+1);\n                            if(top == endWord) return ans;\n                        }\n                    }\n                    top[i] = x;\n                }\n            }\n        }\n        return 0;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false,"notes":"","topic_tags":[]}