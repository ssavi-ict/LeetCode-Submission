{"id":792660225,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1662434399,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/792660225/","is_pending":"Not Pending","title":"Binary Tree Pruning","memory":"8.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool solve(TreeNode * root){\n        if(!root) return false;\n        bool left = solve(root->left);\n        bool right = solve(root->right);\n        if(!left) root->left = nullptr;\n        if(!right) root->right = nullptr;\n        return (root->val==1 | left | right);\n    }\n    \n    TreeNode* pruneTree(TreeNode* root) {\n        return solve(root)?root:nullptr;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"binary-tree-pruning","has_notes":false,"notes":"","topic_tags":[]}