{"id":830374925,"lang":"cpp","lang_name":"C++","time":"1 month, 4 weeks","timestamp":1666752679,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/830374925/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        int n = nums.size();\n        unordered_map<int, bool>umap;\n        umap[nums[0]] = true;\n        int runningSum = 0;\n        for(int i=0; i<n; i++){\n            runningSum += nums[i];\n            runningSum %= k;\n            if(umap.find(runningSum) != umap.end()) return true;\n            umap[runningSum] = true;\n        }\n        return false;\n    }\n};","compare_result":"1111101110011111101000100111110111111111111111111111111111111111111111111111000000000011111111001","title_slug":"continuous-subarray-sum","has_notes":false,"notes":"","topic_tags":[]}