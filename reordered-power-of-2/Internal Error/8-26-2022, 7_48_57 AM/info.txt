{"id":783548618,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1661478537,"status":16,"status_display":"Internal Error","runtime":"N/A","url":"/submissions/detail/783548618/","is_pending":"Not Pending","title":"Reordered Power of 2","memory":"N/A","code":"class Solution {\npublic:\n    \n    vector<int>digit_list(int num){\n        vector<int >digits;\n        while(num){\n            digits.push_back(num%10);\n            num /= 10;\n        }\n        sort(digits.begin(), digits.end());\n        return digits;\n    }\n    \n    bool reorderedPowerOf2(int n) {\n        vector< vector<int> >powerof2;\n        long long val = 1;\n        while(val <= 1000000000){\n            powerof2.push_back(digit_list(val));\n            val = val * 2ll;\n        }\n        \n        vector<int>ndigit = digit_list(n);\n        \n        for(int i=0; i<powerof2.size(); i++){\n            if(powerof2[i].size() == ndigit.size()){\n                bool flag = true;\n                for(int j=0; j<ndigit.size(); j++){\n                    if(powerof2[i][j]!=ndigit[j]){\n                        flag = false;\n                        break;\n                    }\n                }\n                if(flag) return true;\n            }\n        }\n        return false;\n    }\n};","compare_result":null,"title_slug":"reordered-power-of-2","has_notes":false,"notes":"","topic_tags":[]}