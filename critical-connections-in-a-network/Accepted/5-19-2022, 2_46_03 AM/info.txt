{"id":702337654,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1652906763,"status":10,"status_display":"Accepted","runtime":"1288 ms","url":"/submissions/detail/702337654/","is_pending":"Not Pending","title":"Critical Connections in a Network","memory":"179.9 MB","code":"class Solution {\npublic:\n    vector<int>graph[100005];\n    int tCount = 0;\n    bool visited[100005];\n    int dtime[100005], low[100005], parent[100005];\n    \n    void bridge(int u, int n, vector<vector<int>>& connections){\n        dtime[u] = low[u] = tCount++;\n        visited[u] = true;\n        // int child = 0;\n        for(int i=0; i<graph[u].size(); i++){\n            int v = graph[u][i];\n            if(!visited[v]){\n                parent[v] = u;\n                // child++;\n                bridge(v, n, connections);\n                low[u] = min(low[v], low[u]);\n                if(low[v] > dtime[u]){\n                    vector<int>res;\n                    res.push_back(u); res.push_back(v);\n                    connections.push_back(res);\n                }\n            }\n            else if(parent[u]!=v){\n                low[u] = min(low[u], dtime[v]);\n            }\n        }\n        \n    }\n    \n    vector<vector<int>> criticalConnections(int n, vector<vector<int>>& connections) {\n        for(int i=0; i<connections.size(); i++){\n            int u = connections[i][0], v = connections[i][1];\n            // cout<<\"Hi\"<<endl;\n            graph[u].push_back(v);\n            graph[v].push_back(u);\n            \n        }\n        connections.clear();\n        parent[0] = -1;\n        bridge(0, n, connections);\n        return connections;\n    }\n};","compare_result":"11111111111111111","title_slug":"critical-connections-in-a-network","has_notes":false,"notes":"","topic_tags":[]}