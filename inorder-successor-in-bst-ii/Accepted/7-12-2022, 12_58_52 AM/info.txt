{"id":744528433,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1657565932,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/744528433/","is_pending":"Not Pending","title":"Inorder Successor in BST II","memory":"11.6 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    Node* left;\n    Node* right;\n    Node* parent;\n};\n*/\n\nclass Solution {\npublic:\n    \n    Node * answer = NULL;\n    bool verdict = false;\n    \n    Node * getRoot(Node * root){\n        if(!root->parent) return root;\n        return getRoot(root->parent);\n    }\n    \n    void traverse(Node *root, Node * target){\n        if(!root) return;\n        traverse(root->left, target);\n        if(answer) return;\n        if(verdict){\n            answer = root;\n        }\n        if(target == root){\n            verdict = true;\n        }\n        traverse(root->right, target);\n    }\n    \n    Node* inorderSuccessor(Node* node) {\n        Node * root = getRoot(node);\n        traverse(root, node);\n        return answer;\n    }\n};","compare_result":"11111111111111111111111111","title_slug":"inorder-successor-in-bst-ii","has_notes":false,"notes":"","topic_tags":[]}