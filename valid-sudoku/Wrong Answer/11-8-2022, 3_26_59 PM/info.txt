{"id":839316879,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1667899619,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/839316879/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"N/A","code":"class Solution {\npublic:\n    \n    int dx[8] = {0, 0, 1, -1, 1, -1, 1, -1};\n    int dy[8] = {1, -1, 0, 0, 1, 1, -1, -1};\n    \n    int to_int(char x){\n        int number = x - '0';\n        return number;\n    }\n    \n    bool is_row_column_valid(vector<vector<char>>& board, int x_start, int y_start){\n        // cout<<x_start<<' '<<y_start<<endl;\n        int rowWiseVal = 0;\n        for(int i=0; i<9 && board[x_start][i]!='.' ; i++){\n            int cell_value = to_int(board[x_start][i]);\n            if(rowWiseVal & (1 << (cell_value - 1))) return false;\n            rowWiseVal = rowWiseVal | (1 << (cell_value - 1));\n        }\n        \n        int colWiseVal = 0;\n        for(int i=0; i<9 && board[i][y_start]!='.'; i++){\n            int cell_value = to_int(board[i][y_start]);\n            // cout<<cell_value<<endl;\n            if(colWiseVal & (1 << (cell_value - 1))) return false;\n            colWiseVal = colWiseVal | (1 << (cell_value - 1));\n        }\n        return true;\n    }\n    \n    bool isValidSudoku(vector<vector<char>>& board) {\n        \n        vector<pair<int, int>>center;\n        for(int i=1; i<9; i+=3){\n            for(int j=1; j<9; j+=3){\n                center.push_back(make_pair(i, j));\n            }\n        }\n        \n        for(int i=0; i<center.size(); i++){\n            int start_x = center[i].first, start_y = center[i].second;\n            int current_box_number= 0;\n            int cell_value;\n            if(board[start_x][start_y] != '.'){\n                cell_value = to_int(board[start_x][start_y]);\n                current_box_number = (1 << (cell_value - 1));\n            }\n            // cout<<cell_value<<' '<<current_box_number<<endl;\n            for(int j=0; j<8; j++){\n                int cell_x = start_x + dx[j];\n                int cell_y = start_y + dy[j];\n                if(!is_row_column_valid(board, cell_x, cell_y)) return false;\n                \n                if(board[cell_x][cell_y] == '.')  continue;\n                cell_value = to_int(board[cell_x][cell_y]);\n                if(current_box_number & (1 << (cell_value - 1))) return false;\n                current_box_number = current_box_number | (1 << (cell_value - 1));\n                \n            }\n        }\n        return true;\n    }\n};","compare_result":"111110111101001111110111111111111111111111111111101011110101111111111111111111111111101101111111111011010000011000111111110101111100100101111110111111111111001101110001111111111010101001111101000111101111110111001011111111101101111000111011110100111111111001101110110000100001111111100111111010011111010001111110011010111100011101011111101111010110101111101111011110011101111010111111000100011011011111010111110010111111100101001011111111111011110100111111001110111111101111101111011010010111101101001110111","title_slug":"valid-sudoku","has_notes":false,"notes":"","topic_tags":[]}