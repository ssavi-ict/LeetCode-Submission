{"id":822040186,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1665716533,"status":10,"status_display":"Accepted","runtime":"1464 ms","url":"/submissions/detail/822040186/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"294.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n        if(head->next == NULL) return NULL;\n        ListNode * slow = head, * fast = head;\n        ListNode * preSlow = head;\n        while(fast && fast->next){\n            fast = fast->next;\n            if(fast->next) fast = fast->next;\n            preSlow = slow;\n            slow = slow->next;\n        }\n        preSlow->next = slow->next;\n        delete(slow);\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false,"notes":"","topic_tags":[]}