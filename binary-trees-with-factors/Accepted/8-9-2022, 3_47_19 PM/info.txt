{"id":769208056,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1660038439,"status":10,"status_display":"Accepted","runtime":"215 ms","url":"/submissions/detail/769208056/","is_pending":"Not Pending","title":"Binary Trees With Factors","memory":"9.2 MB","code":"class Solution {\npublic:\n    \n    long long dp[1001];\n    unordered_map<int, long long>htable;\n    const int Mod = 1e9 + 7;\n    \n    long long solve(int val, vector<int>&arr, int n){\n        if(htable.find(val)==htable.end()) return 0;\n        if(htable[val]!=-1) return htable[val];\n        long long ret = 0;\n        for(int i=0; i<n; i++){\n            int left = arr[i];\n            int right = val/left;\n            if(left*right==val && htable.find(right)!=htable.end()){\n                // cout<<val<<' '<<left<<' '<<right<<endl;\n                long long lVal = solve(left, arr, n);\n                long long rVal = solve(right, arr, n);\n                ret = (ret + lVal)%Mod;\n                ret = (ret + rVal)%Mod;\n                ret = (ret + (lVal*rVal)%Mod + 1)%Mod;\n            }\n        }\n        htable[val] = ret;\n        return htable[val];\n    }\n    \n    int numFactoredBinaryTrees(vector<int>& arr) {\n        int n = arr.size();\n        for(int i=0; i<n; i++){\n            htable[arr[i]] = -1;\n        }\n        \n        long long ans = 0;\n        for(int i=0; i<n; i++){\n            long long ret = solve(arr[i], arr, n);\n            ans = (ans + ret + 1)%Mod;\n            // cout<<arr[i]<<' '<<ret<<endl;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"binary-trees-with-factors","has_notes":false,"notes":"","topic_tags":[]}