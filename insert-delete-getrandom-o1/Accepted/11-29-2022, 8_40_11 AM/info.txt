{"id":851499674,"lang":"cpp","lang_name":"C++","time":"3 weeks, 4 days","timestamp":1669689611,"status":10,"status_display":"Accepted","runtime":"554 ms","url":"/submissions/detail/851499674/","is_pending":"Not Pending","title":"Insert Delete GetRandom O(1)","memory":"97.1 MB","code":"class RandomizedSet {\npublic:\n    unordered_map<int, int>numExist;\n    vector<int>nums;\n\n    RandomizedSet() {\n        // srand(time(NULL));\n    }\n    \n    bool insert(int val) {\n        if(numExist.find(val) != numExist.end() && numExist[val] != -1) return false;\n        numExist[val] = nums.size();\n        nums.push_back(val);\n        return true;\n    }\n    \n    bool remove(int val) {\n        if(numExist.find(val) == numExist.end() || numExist[val] ==  -1) return false;\n        int last = nums.back();\n        numExist[last] = numExist[val];\n        nums[numExist[val]] = last;\n        numExist[val] = -1;\n        nums.pop_back();\n        return true;\n    }\n    \n    int getRandom() {\n        return nums[rand() % nums.size()];\n    }\n};\n\n/**\n * Your RandomizedSet object will be instantiated and called as such:\n * RandomizedSet* obj = new RandomizedSet();\n * bool param_1 = obj->insert(val);\n * bool param_2 = obj->remove(val);\n * int param_3 = obj->getRandom();\n */","compare_result":"1111111111111111111","title_slug":"insert-delete-getrandom-o1","has_notes":false,"notes":"","topic_tags":[]}