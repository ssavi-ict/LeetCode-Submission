{"id":710599963,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1653927988,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/710599963/","is_pending":"Not Pending","title":"Divide Two Integers","memory":"6 MB","code":"class Solution {\npublic:\n    int divide(long long dividend, long long divisor) {  \n        \n        if(abs(dividend) == abs(divisor)){\n            cout<<divisor<<endl;\n            int ans = -1;\n            if(dividend<0 && divisor<0){\n                ans = 1;\n            }\n            else if(dividend>0 && divisor>0){\n                ans = 1;\n            }\n            return ans;\n        }\n        if(divisor == 1) return dividend;\n        if(divisor == -1){\n            if(dividend==INT_MIN) return INT_MAX;\n            return -dividend;\n        }\n        // if(dividend == 0 || abs(dividend)<abs(divisor)) return 0;\n        \n        bool isPos = true;\n        if(divisor<0){\n            isPos = isPos ^ 1; divisor = abs(divisor);\n        }\n        if(dividend<0){\n            isPos = isPos ^ 1; dividend = abs(dividend);\n        }\n        // cout<<divisor<<' '<<dividend<<endl;\n        int sum = 0;\n        while(dividend >= divisor){\n            int count = 0;\n            while(((long long)divisor<<(long long)(count + 1)) <= (long long)dividend){\n                count++;\n            }\n            sum = sum + (1<<count);\n            // cout<<(divisor<<count) << ' '<<count<<endl;\n            dividend = (long long)dividend - (long long)(divisor<<count);\n            // cout<<sum <<' '<<dividend<<endl;\n        }\n        \n        if(!isPos) return -sum;\n        return sum;\n    }\n};","compare_resulttitle_slug":"divide-two-integers","has_notes":false,"notes":"","topic_tags":[]}