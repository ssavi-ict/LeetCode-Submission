{"id":796953919,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1662883261,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/796953919/","is_pending":"Not Pending","title":"Maximum Performance of a Team","memory":"N/A","code":"class Solution {\npublic:\n    \n    const int MOD = 1000000000 + 7;\n    \n    int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {\n        vector<pair<int, int>>features;\n        for(int i=0; i<n; i++){\n            features.push_back(make_pair(efficiency[i], speed[i]));\n        }\n        sort(features.begin(), features.end(), greater<pair<int, int>>());\n        \n        long long current_ans = 0, current_sum = 0;\n        long long current_min, max_ans = 0;\n        priority_queue<int>myPQ;\n        \n        for(int i=0; i<n; i++){\n            if(myPQ.size() < k){\n                current_sum += features[i].second;\n                myPQ.push(-features[i].second);\n                current_min = features[i].first;\n            }\n            else {\n                int top = -myPQ.top();\n                long long temp_sum = current_sum - top + features[i].second;\n                long long temp_ans = temp_sum * features[i].first;\n                if(temp_ans > current_ans){\n                    current_sum = temp_sum;\n                    current_min = features[i].first;\n                    myPQ.pop();\n                    myPQ.push(-features[i].second);\n                }\n            }\n            \n            current_ans = current_sum * current_min;\n            max_ans = max(max_ans, current_ans);\n        }\n        return max_ans % MOD;\n    }\n};\n\n/*\n[2,8,2] -> [8,2,2]\n[2,7,1] -> [7,2,1]\n*/","compare_result":"1111111111111111111111110101101010011011011111111111111","title_slug":"maximum-performance-of-a-team","has_notes":false,"notes":"","topic_tags":[]}