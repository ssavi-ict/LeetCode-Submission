{"id":753711757,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1658492840,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/753711757/","is_pending":"Not Pending","title":"Number of Islands","memory":"N/A","code":"class Solution {\npublic:\n    int numIslands(vector<vector<char>>& grid) {\n        int rows = grid.size();\n        if( rows == 0) return 0;\n        int cols = grid[0].size();\n        int nums_island = 0 ;\n        int x[4] = {1,0,-1,0};\n        int y[4] = {0,-1,0,1};\n        for( int i = 0 ; i < rows ; i++)\n        {\n            for( int j = 0 ; j < cols ; j++)\n            {\n                if( grid[i][j] == '1')\n                {\n                    nums_island++;\n                    queue<pair<int,int> > qu;\n                    qu.push({i,j});\n                    while(!qu.empty())\n                    {\n                        pair ij = qu.front();\n                        qu.pop();\n                        int r = ij.first , c = ij.second;\n                        grid[r][c] = '0';\n                        for( int k = 0 ; k < 4 ; k++)\n                        {\n                            int p = r + x[k] , q = c+y[k];\n                            if(p>=0 && p<rows && q>=0 && q<cols && grid[p][q]=='1')\n                                qu.push({p,q});\n                        }\n                    }\n                }\n            }\n        }\n        return nums_island;\n    }\n};","compare_result":"1111111111111111111111111111111111111110000000000","title_slug":"number-of-islands","has_notes":false,"notes":"","topic_tags":[]}