{"id":693720599,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1651763312,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/693720599/","is_pending":"Not Pending","title":"Implement Stack using Queues","memory":"6.9 MB","code":"class MyStack {\npublic:\n    queue<int> first, second;\n    MyStack() {\n        \n    }\n    \n    void push(int x) {\n        second.push(x);\n        cout << first.size() << endl;\n        while(!first.empty()) {\n            second.push(first.front());\n            first.pop();\n        }\n        queue<int> temp;\n        first = second;\n        second = temp;\n    }\n    \n    int pop() {\n        int top = first.front();\n        first.pop();\n        return top;\n    }\n    \n    int top() {\n        int top = first.front();\n        return top;\n    }\n    \n    bool empty() {\n        return first.empty();\n    }\n};\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack* obj = new MyStack();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->top();\n * bool param_4 = obj->empty();\n */","compare_result":"1111111111111111","title_slug":"implement-stack-using-queues","has_notes":false,"notes":"","topic_tags":[]}