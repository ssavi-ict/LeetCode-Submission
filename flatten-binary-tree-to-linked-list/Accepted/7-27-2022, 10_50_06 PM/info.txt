{"id":758265117,"lang":"cpp","lang_name":"C++","time":"4 months, 4 weeks","timestamp":1658940606,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/758265117/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode * ans, *ansHead;\n    void makeflat(TreeNode * root){\n        if(!root) return ;\n        TreeNode * newNode = new TreeNode(root->val);\n        if(!ansHead)\n            ans = ansHead = newNode;\n        else{\n            ans->right = newNode;\n            ans = ans->right;\n        }\n        makeflat(root->left);\n        makeflat(root->right);\n    }\n    \n    void flatten(TreeNode* root) {\n        if(!root) return ;\n        makeflat(root);\n        root->left = NULL;\n        root->right = ansHead->right;\n        root = ansHead;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false,"notes":"","topic_tags":[]}