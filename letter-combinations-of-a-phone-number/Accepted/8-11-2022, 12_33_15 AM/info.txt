{"id":770443454,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1660156395,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/770443454/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"6.7 MB","code":"class Solution {\npublic:\n    void assignment(vector<string> & mapped){\n  mapped.push_back(\"\");  // 0\n  mapped.push_back(\"\");  // 1\n  mapped.push_back(\"abc\"); // 2\n  mapped.push_back(\"def\");\n  mapped.push_back(\"ghi\");\n  mapped.push_back(\"jkl\");\n  mapped.push_back(\"mno\");\n  mapped.push_back(\"pqrs\");\n  mapped.push_back(\"tuv\");\n  mapped.push_back(\"wxyz\"); // 9\n}\n\nvector<string> letterCombinations(string digits) {\n  vector<string>mapped;\n  assignment(mapped);\n  \n  vector<string>ans, tmp;\n  \n  bool first = true;\n  for(int i=size(digits)-1; i>=0; i--){\n    int idx = digits[i] - '0';\n    string key = mapped[idx];\n    \n    ans.clear();\n    if(first){\n      first = false;\n      for(int j=0; j<key.size(); j++){\n          string in = \"\";\n        in = in + key[j];\n        ans.push_back(in);\n      }\n    }\n    else{\n      for(int j=0; j<size(key); j++){\n        for(int k=0; k<tmp.size(); k++){\n          string in = key[j] + tmp[k];\n          ans.push_back(in);\n        }\n      }\n    }\n    tmp.clear();\n    tmp = ans;\n  }\n  return ans;\n}\n};","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"notes":"","topic_tags":[]}