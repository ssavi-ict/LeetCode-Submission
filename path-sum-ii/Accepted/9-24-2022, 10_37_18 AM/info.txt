{"id":807263791,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1663994238,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/807263791/","is_pending":"Not Pending","title":"Path Sum II","memory":"20.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void getPathSum(TreeNode * root, vector<vector<int>> & answer, vector<int> & tmp, int targetSum){\n        int value = root->val;\n        tmp.push_back(value);\n        // cout<<targetSum<<' '<<value<<endl;\n        if(targetSum - value == 0 && (!root->left && !root->right)){\n            answer.push_back(tmp);\n        }\n        \n        if(root->left){\n            getPathSum(root->left, answer, tmp, targetSum - value);\n        }\n        if(root->right){\n            getPathSum(root->right, answer, tmp, targetSum - value);\n        }\n       \n        tmp.pop_back();\n    }\n    \n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        if(root == NULL) return {};\n        vector<vector<int>>answer;\n        vector<int>tmp;\n        getPathSum(root, answer, tmp, targetSum);\n        return answer;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii","has_notes":false,"notes":"","topic_tags":[]}