{"id":733928020,"lang":"cpp","lang_name":"C++","time":"5 months, 4 weeks","timestamp":1656472614,"status":10,"status_display":"Accepted","runtime":"55 ms","url":"/submissions/detail/733928020/","is_pending":"Not Pending","title":"Queue Reconstruction by Height","memory":"12.3 MB","code":"class Solution {\npublic:\n    \n    struct comp{\n        bool operator()(pair<int, int>&a, pair<int, int>&b){\n            if(a.first == b.first)\n                return a.second < b.second;\n            return a.first > b.first;\n        }\n    };\n    \n    vector<vector<int>> reconstructQueue(vector<vector<int>>& people) {\n        int n = people.size();\n        vector< pair<int, int> >human, ans;\n        int tall = 0;\n        for(int i=0; i<n; i++){\n            human.push_back(make_pair(people[i][0], people[i][1]));\n        }\n        sort(human.begin(), human.end(), comp());\n        \n        for(int i=0; i<human.size(); i++){\n            int p_front = human[i].second;\n            int pos = 0;\n            for(int j=0; j<ans.size() && p_front>0; j++){\n                if(ans[j].first>=human[i].first){\n                    pos = j+1; p_front--;\n                }\n            }\n            // cout<<pos<<' '<<ans.size()<<endl;\n            ans.insert(ans.begin()+pos, make_pair(human[i].first, human[i].second));\n        }\n        \n        \n        for(int i=0, j=0; i<ans.size(); i++, j++){\n            people[i][0] = ans[i].first;\n            people[i][1] = ans[i].second;\n        }\n        \n        return people;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"queue-reconstruction-by-height","has_notes":false,"notes":"","topic_tags":[]}