{"id":687971019,"lang":"cpp","lang_name":"C++","time":"8Â months","timestamp":1650990751,"status":10,"status_display":"Accepted","runtime":"292 ms","url":"/submissions/detail/687971019/","is_pending":"Not Pending","title":"Min Cost to Connect All Points","memory":"10.9 MB","code":"class Solution {\npublic:\n    int getWeight(vector<int>& startPoint, vector<int>& endPoint) {\n        return abs(startPoint[0]-endPoint[0]) +\n            abs(startPoint[1] - endPoint[1]);\n    }\n    int minCostConnectPoints(vector<vector<int>>& points) {\n        \n        int n = points.size();\n        int totalWeight = 0;\n        \n        map<int, bool> visited;\n        vector<int> minWeight(n, INT_MAX);\n        minWeight[0] = 0;\n        \n        \n        while(visited.size() != n) {\n            int currNode = -1;\n            int currMinEdge = INT_MAX;\n            \n            for(int node = 0; node < n; node++) {\n                if(visited.count(node))\n                    continue;\n                if(minWeight[node] < currMinEdge) {\n                    currNode = node;\n                    currMinEdge = minWeight[node];\n                }\n            }\n            totalWeight += currMinEdge;\n            visited[currNode] = true;\n\n            for(int nextNode = 0; nextNode < n; ++nextNode) {\n                if(visited.count(nextNode))\n                    continue;\n                int nextWeight = getWeight(points[currNode], points[nextNode]);\n                minWeight[nextNode] = min(minWeight[nextNode], nextWeight);\n            }\n        }\n        return totalWeight;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-to-connect-all-points","has_notes":false,"notes":"","topic_tags":[]}