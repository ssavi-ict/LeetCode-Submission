{"id":766150454,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1659728382,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/766150454/","is_pending":"Not Pending","title":"Find the Duplicate Number","memory":"N/A","code":"class Solution {\npublic:\n    int findDuplicate(vector<int>& nums) {\n        int slow = 0, fast = 0, entry = 0, n = size(nums);\n        do{\n            slow = (slow + 1 == n) ? 0 : slow + 1;\n            fast = (fast + 1 == n) ? 0 : fast + 1;\n            fast = (fast + 1 == n) ? 0 : fast + 1;\n            \n        }while(nums[slow]!=nums[fast]);\n        \n        while(nums[entry]!=nums[slow]){\n            slow = (slow + 1 == n) ? 0 : slow + 1;\n            entry++;\n        }\n        \n        return nums[slow];\n    }\n};","compare_result":"1111111111111111111111110111111111111111111111111111000000","title_slug":"find-the-duplicate-number","has_notes":false,"notes":"","topic_tags":[]}