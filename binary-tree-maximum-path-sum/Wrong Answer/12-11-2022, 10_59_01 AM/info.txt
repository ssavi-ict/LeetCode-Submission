{"id":857943881,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1670734741,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/857943881/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int solve(TreeNode * root, int & ans){\n        if(!root) return 0;\n        int left = max(solve(root->left, ans), 0);\n        int right = max(solve(root->right, ans), 0);\n        ans = max(ans, left + right + root->val);\n        return max(left+root->val, right+root->val);\n    }\n\n    int maxPathSum(TreeNode* root) {\n        int ans = 0;\n        solve(root, ans);\n        return ans;\n    }\n};","compare_result":"1111011100111101111111111111111111111111111111111111111111111111111111101111111101111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"notes":"","topic_tags":[]}