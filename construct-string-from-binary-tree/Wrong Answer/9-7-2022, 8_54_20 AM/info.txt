{"id":793513289,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1662519260,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/793513289/","is_pending":"Not Pending","title":"Construct String from Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    string ans;\n    \n    string to_str(int value){\n        int n = (value < 0) ? -value : value;\n        string ret = \"\";\n        while(n){\n            ret += (n%10 + '0');\n            n /= 10;\n        }\n        if(value < 0) ans += '-';\n        reverse(ret.begin(), ret.end());\n        return ret;\n    }\n    \n    void solve(TreeNode * root){\n        ans += to_str(root->val);\n        if(root->left){\n            ans += '(';\n            solve(root->left);\n            ans += ')';\n        }\n        if(root->right){\n            if(!root->left){\n                ans += '(';\n                ans += ')';\n            }\n            ans += '(';\n            solve(root->right);\n            ans += ')';\n        }\n    }\n    \n    string tree2str(TreeNode* root) {\n        ans = \"\";\n        solve(root);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111110111111110010110000100010010100100000111110111111111111111111111111111111111111011","title_slug":"construct-string-from-binary-tree","has_notes":false,"notes":"","topic_tags":[]}