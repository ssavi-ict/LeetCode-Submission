{"id":743890055,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1657508064,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/743890055/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void solve(TreeNode * root, vector<int>&ans){\n        if(root == NULL) return;\n        if(root->right){\n            ans.push_back(root->val);\n            solve(root->right, ans);\n        }\n        else{\n            ans.push_back(root->val);\n            solve(root->left, ans);\n        }\n    }\n    \n    vector<int> rightSideView(TreeNode* root) {\n        vector<int>ans;\n        solve(root, ans);\n        return ans;\n    }\n};","compare_result":"11111100111011011111011010011111111111111110111100011111001011011111111111110111111101111111011100110110111011101111100010110010101111101011111001011001111011110111111110101101111011011011101111111111100110010010010","title_slug":"binary-tree-right-side-view","has_notes":false,"notes":"","topic_tags":[]}