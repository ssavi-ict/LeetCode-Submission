{"id":804930835,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1663726289,"status":10,"status_display":"Accepted","runtime":"271 ms","url":"/submissions/detail/804930835/","is_pending":"Not Pending","title":"Sum of Even Numbers After Queries","memory":"46.2 MB","code":"class Solution {\npublic:\n    vector<int> sumEvenAfterQueries(vector<int>& nums, vector<vector<int>>& queries) {\n        int n = size(nums), q = size(queries);\n        bool isEven[n+1];\n        memset(isEven, false, sizeof(isEven));\n        \n        int curSum = 0;\n        for(int i=0; i<n; i++){\n            if(nums[i] %2 == 0){\n                isEven[i] = true;\n                curSum += nums[i];   // isEven = 1, 3 | curSum = 2 + 4 = 6\n            }\n        }\n        \n        vector<int>ans;\n        for(int i=0; i<q; i++){                               // isEven = 0, 3 | 6\n            int value = queries[i][0], index = queries[i][1]; // 1 , 0 | -3, 1 | -4 0 | 2 3\n            int preVal = nums[index];                         // preVal = 1 | 2 | 2 | 4\n            int curVal = nums[index] + value;                 // curVal = 1 + 1 = 2 | 2 + (-3) = -1 | 2 -4 = -2 | 4 + 2 = 6\n            \n            if(curVal % 2 == 0){\n                if(isEven[index]){                            // \n                    curSum -= preVal;                         // 6 - 2 = 4 | 2 - 4 = -2;\n                }\n                else{                                      \n                    isEven[index] = true;                     // 0, 1, 3\n                }\n                curSum += curVal;                             // 6 + 2 = 8 | 4 + (-2) = 2 | -2 +  6 = 4;\n            }\n            else{\n                if(isEven[index]){                            \n                    curSum -= preVal;                        // 8 - 2 = 6\n                    isEven[index] = false;                   // 0, 3\n                }\n            }\n            nums[index] = curVal;                           // 2 2 3 4 | 2 -1 3 4 | -2 -1 3 4\n            ans.push_back(curSum);                          // 8, 6, 2, 4\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-even-numbers-after-queries","has_notes":false,"notes":"","topic_tags":[]}