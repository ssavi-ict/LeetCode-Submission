{"id":664465643,"lang":"cpp","lang_name":"C++","time":"9 months, 1 week","timestamp":1647880256,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/664465643/","is_pending":"Not Pending","title":"Longest Repeating Substring","memory":"6.7 MB","code":"struct info\n{\n    int idx, xx, yy;\n    bool operator < (const info &other) const {\n        if(xx == other.xx)\n            return yy < other.yy;\n        return xx < other.xx;\n    }\n} sa[2005];\n\nclass Solution {\npublic:\n    int step;\n    int Rank[20][2005], lcp[2005];\n    \n    void BuildSA(string &s) {\n        int n = s.size();\n        \n        for(int i=0 ; i<n ; i++){\n            Rank[0][i] = s[i] - 'a';\n        }\n        \n        step = 1;\n        for(int jump=1 ; (jump>>1) < n ; jump <<= 1, step++){\n            for(int i=0 ; i<n ; i++){\n                sa[i].xx = Rank[step-1][i];\n                sa[i].yy = (i + jump) < n ? Rank[step-1][i+jump] : -1;\n                sa[i].idx = i;\n            }\n            \n            sort(sa, sa+n);\n        \n            for(int i=0 ; i<n ; i++){\n                Rank[step][sa[i].idx] = (i > 0 && sa[i].xx == sa[i-1].xx && sa[i].yy == sa[i-1].yy) ? Rank[step][sa[i-1].idx] : i;\n            }\n        }\n    }\n    \n    void BuildLCP(int n) {\n        vector<pair<int, int>>temp(n, {0, 0});\n        for(int i=0 ; i<n ; i++)\n            temp[i] = {Rank[step-1][i], i};\n        sort(temp.begin(), temp.end());\n        \n        for(int i=1 ; i<n ; i++){\n            int x = temp[i-1].second, y = temp[i].second;\n            // cout<<x<<' '<<y<<' ';\n            lcp[i] = 0;\n            \n            for(int j=step-1 ; j>=0 && x<n && y<n ; j--){\n                if(Rank[j][x] == Rank[j][y]){\n                    lcp[i] += (1<<j);\n                    x += (1<<j);\n                    y += (1<<j);\n                }\n            }\n            // cout<<lcp[i]<<endl;\n        }\n    }\n    \n    int longestRepeatingSubstring(string s) {\n        int n = s.size();\n        BuildSA(s);\n        BuildLCP(n);\n        \n        int ans = 0;\n        for(int i=0 ; i<n ; i++){\n            ans = max(ans, lcp[i]);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111","title_slug":"longest-repeating-substring","has_notes":false,"notes":"","topic_tags":[]}