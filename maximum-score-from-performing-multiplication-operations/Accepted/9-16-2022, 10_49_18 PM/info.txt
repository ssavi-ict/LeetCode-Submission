{"id":801398426,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1663346958,"status":10,"status_display":"Accepted","runtime":"517 ms","url":"/submissions/detail/801398426/","is_pending":"Not Pending","title":"Maximum Score from Performing Multiplication Operations","memory":"119.9 MB","code":"class Solution {\npublic:\n    \n    /*int solve(int index, int left, int right, vector<int>&nums, vector<int>&multipliers, vector<vector<int>>&dp){\n        if(index >= multipliers.size()) return 0;\n        if(dp[index][left] != INT_MIN) return dp[index][left];\n        int leftSum = (nums[left] * multipliers[index]) + solve(index+1, left+1, right, nums, multipliers, dp);\n        int rightSum = (nums[right] * multipliers[index]) + solve(index+1, left, right-1, nums, multipliers, dp);\n        dp[index][left] = max(leftSum, rightSum);\n        return dp[index][left];\n    }*/\n    \n    int maximumScore(vector<int>& nums, vector<int>& multipliers) {\n        int m = multipliers.size();\n        vector< vector<int> >dp(m+1, vector<int>(m+1, 0));\n        \n        vector<int>prev(m+1, 0);\n        vector<int>curr(m+1, 0);\n        \n        for(int index =  m-1; index >= 0; index--){\n            int right = nums.size() - 1;\n            for(int left = index; left>=0; left--){\n                // int leftSum = (nums[left] * multipliers[index]) + dp[index+1][left+1];\n                int leftSum = (nums[left] * multipliers[index]) + prev[left+1];\n                // int rightSum = (nums[right] * multipliers[index]) + curr[left]; \n                int rightSum = (nums[right] * multipliers[index]) + prev[left]; \n                curr[left] = max(leftSum, rightSum);\n                right--;\n            }\n            prev = curr;\n        }\n        return prev[0];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"maximum-score-from-performing-multiplication-operations","has_notes":false,"notes":"","topic_tags":[]}