{"id":693550013,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1651738260,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/693550013/","is_pending":"Not Pending","title":"Shortest Unsorted Continuous Subarray","memory":"27.4 MB","code":"class Solution {\npublic:\n    int findUnsortedSubarray(vector<int>& nums) {\n        stack<int> stack;\n        \n        int start = nums.size();\n        int end = 0;\n        \n        for(int i = 0; i < nums.size(); i++) {\n            while(!stack.empty() && nums[stack.top()] > nums[i]) {\n                start = min(stack.top(), start);\n                stack.pop();\n            }\n            stack.push(i);\n        }\n        while(!stack.empty())\n            stack.pop();\n        \n        for(int i = nums.size()-1; i >= 0; i--) {\n            while(!stack.empty() && nums[stack.top()] < nums[i]) {\n                end = max(stack.top(), end);\n                stack.pop();\n            }\n            stack.push(i);\n        }\n        \n        \n        if(start <= end) {\n            return end - start + 1;\n        }\n        return 0;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"shortest-unsorted-continuous-subarray","has_notes":false,"notes":"","topic_tags":[]}