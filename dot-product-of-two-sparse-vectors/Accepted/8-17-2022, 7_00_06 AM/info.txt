{"id":775625264,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1660698006,"status":10,"status_display":"Accepted","runtime":"388 ms","url":"/submissions/detail/775625264/","is_pending":"Not Pending","title":"Dot Product of Two Sparse Vectors","memory":"168.6 MB","code":"class SparseVector {\npublic:\n    unordered_map<int, int>sparse;\n    SparseVector(vector<int> &nums) {\n        for(int i=0; i<size(nums); i++){\n            if(nums[i]) sparse[i] = nums[i];\n        }\n    }\n    \n    // Return the dotProduct of two sparse vectors\n    int dotProduct(SparseVector& vec) {\n        int num = 0;\n        for(auto it:this->sparse){\n            if(vec.sparse.count(it.first)){\n                num += (this->sparse[it.first] * vec.sparse[it.first]);\n            }\n        }\n        return num;\n    }\n};\n\n// Your SparseVector object will be instantiated and called as such:\n// SparseVector v1(nums1);\n// SparseVector v2(nums2);\n// int ans = v1.dotProduct(v2);","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"dot-product-of-two-sparse-vectors","has_notes":false,"notes":"","topic_tags":[]}