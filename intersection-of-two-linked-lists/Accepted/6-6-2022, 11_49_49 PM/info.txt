{"id":715900969,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1654537789,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/715900969/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"14.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        ListNode * curA = headA;\n        ListNode * curB = headB;\n        int c1 = 0, c2 = 0;\n        while(c1<2 || c2<2){\n            if(curA == curB) return curA;\n            curA = curA->next;\n            curB = curB->next;\n            if(!curA){\n                c1++;\n                curA = headB;\n            }\n            if(!curB){\n                c2++;\n                curB = headA;\n            }\n        }\n        return nullptr;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists","has_notes":false,"notes":"","topic_tags":[]}