{"id":769826846,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1660097289,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/769826846/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode * convertBST(vector<int>&nums, int start, int end){\n        if(start > end) return NULL;\n        int mid = (start + end)/2;\n        TreeNode * root = new TreeNode(nums[mid]);\n        root->left = convertBST(nums, start, mid-1);\n        root->right = convertBST(nums, mid+1, end);\n        return root;\n    }\n    \n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        return convertBST(nums, 0, size(nums)-1);\n    }\n};\n\n/*\n\n(nums, 0, 4) | mid = (0+4)/2 = 2, root = 0(2), L (nums, 0, 1), R (nums, 3, 4)\n(nums, 0, 1) | mid = (0+1)/2 = 0, root =-10(0), L (nums, 0, -1) = NULL, R (nums, 1, 1)\n(nums, 1, 1) | mid = (1+1)/2 = 1, root = -3(1), (nums, 1, 0) = NULL, (nums, 2, 1) =NULL  \n\n(nums, 3, 4) | mid = (3+4)/2 = 3, root =5(3), L(nums, 3, 2) = NULL, R(nums, 4, 4)\n(nums, 4, 4) | mid = (4+4)/2 = 4, root = 9(4), L(nums, 5, 3) = NULL, R(nums, 5, 4) = NULL\n\n*/","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"notes":"","topic_tags":[]}