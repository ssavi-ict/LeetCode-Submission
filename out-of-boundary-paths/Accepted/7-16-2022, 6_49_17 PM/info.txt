{"id":748524054,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1657975757,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/748524054/","is_pending":"Not Pending","title":"Out of Boundary Paths","memory":"6.5 MB","code":"class Solution {\npublic:\n    int M, N;\n    int dp[51][51][51];\n    const int mod = 1000000000 + 7;\n    \n    int dx[4] = {0, 0, -1, 1};\n    int dy[4] = {1, -1, 0, 0};\n    \n    bool valid(int x, int y){\n        if(x<0 || y<0 || x>=M || y>=N) return true;\n        return false;\n    }\n    \n    int solve(int u, int v, int maxMove){\n        if(valid(u, v)) return 1;\n        if(maxMove <= 0) return 0;\n        if(dp[u][v][maxMove]!=-1) return dp[u][v][maxMove];\n        int ret = 0;\n        for(int i=0; i<4; i++){\n            int x = u + dx[i];\n            int y = v + dy[i];\n            ret = (ret%mod + solve(x, y, maxMove-1)%mod)%mod;\n        }\n        return (dp[u][v][maxMove] = ret%mod);\n    }\n    \n    int findPaths(int m, int n, int maxMove, int startRow, int startColumn) {\n        M = m, N = n;\n        memset(dp, -1, sizeof(dp));\n        return solve(startRow, startColumn, maxMove);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"out-of-boundary-paths","has_notes":false,"notes":"","topic_tags":[]}