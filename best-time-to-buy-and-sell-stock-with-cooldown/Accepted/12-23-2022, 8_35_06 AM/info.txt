{"id":864023056,"lang":"cpp","lang_name":"C++","time":"1 day, 9 hours","timestamp":1671762906,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/864023056/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock with Cooldown","memory":"12 MB","code":"class Solution {\npublic:\n    \n    /*int solve(int index, vector<int>&prices, bool buy, vector<vector<int>>&dp){\n        if(index >= size(prices)) return 0;\n        if(dp[index][buy]!=-1) return dp[index][buy];\n        int ret = 0;\n        if(buy){\n            ret = max(ret, -prices[index] + solve(index + 1, prices, 0, dp));\n            ret = max(ret, 0 + solve(index+1, prices, 1, dp));\n        }\n        else{\n            ret = max(ret, prices[index] + solve(index + 2, prices, 1, dp));\n            ret = max(ret, 0 + solve(index + 1, prices, 0, dp));\n        }\n        return dp[index][buy] = ret;\n    }*/\n    \n    int maxProfit(vector<int>& prices) {\n        int n = size(prices);\n        vector<vector<int>>dp(n+2, vector<int>(2, 0));\n        \n        for(int index = n-1; index>=0; index--){\n            for(int buy=0; buy<2; buy++){\n                int ret = 0;\n                if(buy){\n                    ret = max(ret, -prices[index] + dp[index+1][0]);\n                    ret = max(ret, 0 + dp[index+1][1]);\n                }\n                else{\n                    ret = max(ret, prices[index] + dp[index+2][1]);\n                    ret = max(ret, 0 + dp[index+1][0]);\n                }\n                dp[index][buy] = ret;\n            }\n        }\n        return dp[0][1];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-time-to-buy-and-sell-stock-with-cooldown","has_notes":false,"notes":"","topic_tags":[]}