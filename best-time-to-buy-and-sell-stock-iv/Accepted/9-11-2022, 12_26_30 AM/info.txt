{"id":796486231,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1662834390,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/796486231/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock IV","memory":"13.2 MB","code":"class Solution {\npublic:\n    \n    \n    int maxProfit(int k, vector<int>& prices) {\n        vector<vector<vector<int>>>dp(prices.size()+1, vector<vector<int>>(2, vector<int>(k+1, 0)));\n        // int ans = solve(0, prices, 1, k, dp);\n        // return ans;\n        int n = prices.size();\n        \n        for(int index=n-1; index>=0; index--){\n            for(int capacity = 1; capacity<=k; capacity++){\n                for(int buy=0; buy<2; buy++){\n                    int ret = 0;\n                    if(buy){\n                        ret = max(ret, -prices[index] + dp[index+1][0][capacity]);\n                        ret = max(ret, 0 + dp[index+1][1][capacity]);\n                    }\n                    else{\n                        ret = max(ret, prices[index] + dp[index+1][1][capacity-1]);\n                        ret = max(ret, 0 + dp[index+1][0][capacity]);\n                    }\n                    dp[index][buy][capacity] = ret;\n                }\n            }\n        }\n        // cout<<dp[0][0][k]<<' '<<dp[0][1][k]<<endl;\n        return dp[0][1][k];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-time-to-buy-and-sell-stock-iv","has_notes":false,"notes":"","topic_tags":[]}