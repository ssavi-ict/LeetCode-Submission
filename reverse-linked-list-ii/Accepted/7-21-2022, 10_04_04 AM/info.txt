{"id":752565057,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1658376244,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/752565057/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"7.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseBetween(ListNode* head, int left, int right) {\n        vector<int>vec;\n        ListNode * cur = head;\n        while(cur){\n            vec.push_back(cur->val);\n            cur = cur->next;\n        }\n        left--, right--;\n        while(left < right){\n            swap(vec[left], vec[right]);\n            left++, right--;\n        }\n        \n        ListNode * curr, * newH;\n        curr = newH = new ListNode(vec[0]);\n        int idx = 1;\n        while(idx<size(vec)){\n            // ListNode * node = new ListNode(vec[idx++]);\n            curr->next = new ListNode(vec[idx++]);\n            curr = curr->next;\n        }\n        return newH;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii","has_notes":false,"notes":"","topic_tags":[]}