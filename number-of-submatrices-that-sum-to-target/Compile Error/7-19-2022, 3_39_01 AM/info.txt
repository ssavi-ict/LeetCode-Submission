{"id":750573975,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1658180341,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/750573975/","is_pending":"Not Pending","title":"Number of Submatrices That Sum to Target","memory":"N/A","code":"int numSubmatrixSumTarget(vector<vector<int>>& A, int target) {\n\tint res = 0, m = size(A), n = size(A[0]);\n\tfor (int row = 0; row < m; row++)\n\t\tfor (int col = 1; col < n; col++)\n\t\t\tA[row][col] += A[row][col - 1];\n\t//         cursum, occurences\n\tunordered_map<int, int> mp;\n\tfor (int colStart = 0; colStart < n; colStart++) {\n\t\tfor (int colEnd = colStart; colEnd < n; colEnd++) {\n\t\t\tint cursum = 0;\n\t\t\tmp = {{0, 1}};\n\t\t\tfor(int row = 0; row < m; row++){\n\t\t\t\tcursum += A[row][colEnd] - (colStart ? A[row][colStart - 1] : 0);    \n\t\t\t\t// mp[sum-target] will give number of submatrices found having sum as 'sum - target'\n\t\t\t\tres += mp[cursum - target];\n\t\t\t\tmp[cursum]++;\n\t\t\t}\n\t\t}\n\t}\n\treturn res;    \n}","compare_result":null,"title_slug":"number-of-submatrices-that-sum-to-target","has_notes":false,"notes":"","topic_tags":[]}