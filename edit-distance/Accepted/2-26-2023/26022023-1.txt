class Solution {
public:

    int solve(int idx1, int idx2, string &s1, string &s2, vector<vector<int>> & dp){
        if(idx1 < 0) return idx2 + 1;
        if(idx2 < 0) return idx1 + 1;
        if(dp[idx1][idx2] != -1) return dp[idx1][idx2];
        if(s1[idx1] == s2[idx2]) return solve(idx1-1, idx2-1, s1, s2, dp);
        dp[idx1][idx2] = 1 + min(solve(idx1 - 1, idx2, s1, s2, dp), 
                             min(solve(idx1, idx2-1, s1, s2, dp), 
                             solve(idx1-1, idx2-1, s1, s2, dp)));
        return dp[idx1][idx2];
    }

    int minDistance(string word1, string word2) {
        int n = word1.size();
        int m = word2.size();
        vector<vector<int>>dp(n, vector<int>(m, -1));
        return solve(n-1, m-1, word1, word2, dp);
    }
};