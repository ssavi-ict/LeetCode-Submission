{"id":833797901,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1667194104,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/833797901/","is_pending":"Not Pending","title":"Shortest Path in a Grid with Obstacles Elimination","memory":"N/A","code":"class Solution {\npublic:\n\n    int dx[4] = {0, -1, 0, 1};\n    int dy[4] = {-1, 0, 1, 0};\n\n    bool isValid(int u, int v, int m, int n){\n        return (u>=0 && u<m && v>=0 &&v<n);\n    }\n\n    int solve(int u, int v, vector<vector<int>>& grid, int m, int n, int k, vector<vector<bool>> & visited, vector<vector<vector<int>>>& dp){\n        if(u == 0 && v==0) return 0;\n        if(dp[u][v][k] != -1) return dp[u][v][k];\n        int ret = 1e6;\n        visited[u][v] = true;\n        for(int i=0; i<4; i++){\n            int x = u + dx[i];\n            int y = v + dy[i];\n            if(isValid(x,y,m,n) && !visited[x][y]){\n                if(grid[x][y] == 1 && k > 0){\n                    ret = min(ret, 1 + solve(x, y, grid, m, n, k-1, visited, dp));\n                }\n                if(grid[x][y] == 0){\n                    ret = min(ret, 1 + solve(x, y, grid, m, n, k, visited, dp));\n                }\n            }\n        }\n        visited[u][v] = false;\n        return dp[u][v][k] = ret;\n    }\n    int shortestPath(vector<vector<int>>& grid, int k) {\n        int m = grid.size(), n = grid[0].size();\n        vector<vector<bool>>visited(m+1, vector<bool>(n+1, false));\n        vector<vector<vector<int>>>dp(m+1, vector<vector<int>>(n+1, vector<int>(k+1, -1)));\n        int ans = solve(m-1, n-1, grid, m, n, k, visited, dp);\n        return (ans > m*n) ? -1 : ans;\n    }\n};","compare_result":"1111111111111111111111110111111111111111111111111111","title_slug":"shortest-path-in-a-grid-with-obstacles-elimination","has_notes":false,"notes":"","topic_tags":[]}