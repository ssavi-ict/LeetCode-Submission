{"id":764552623,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1659566861,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/764552623/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"71.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        ListNode * newHead = NULL, *newCur = NULL;\n        int carry = 0;\n        while(l1 || l2){\n            int sum = carry;\n            if(l1){\n                sum += l1->val; l1 = l1->next;\n            }\n            if(l2){\n                sum += l2->val; l2 = l2->next;\n            }\n            \n            if(!newHead){\n                newHead = new ListNode(sum%10); \n                newCur = newHead;\n            }\n            else{\n                ListNode * newNode = new ListNode(sum%10);\n                newCur->next = newNode;\n                newCur = newCur->next;\n            }\n            carry = sum / 10;\n        }\n        while(carry){\n            ListNode * newNode = new ListNode(carry%10);\n            newCur->next = newNode;\n            newCur = newCur->next;\n            carry = carry / 10;\n        }\n        return newHead;\n    }\n};","compare_resulttitle_slug":"add-two-numbers","has_notes":false,"notes":"","topic_tags":[]}