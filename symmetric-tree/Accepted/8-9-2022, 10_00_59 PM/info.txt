{"id":769453534,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1660060859,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/769453534/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool mirror(TreeNode * t1, TreeNode * t2){\n        if(!t1 && !t2) return true;\n        if(!t1&&t2 || t1&&!t2) return false;\n        return (t1->val == t2->val && mirror(t1->left, t2->right) && mirror(t1->right, t2->left));\n    }\n    \n    bool isSymmetric(TreeNode* root) {\n        return mirror(root, root);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"notes":"","topic_tags":[]}