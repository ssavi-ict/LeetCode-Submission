{"id":794294812,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1662596284,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/794294812/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void solve(TreeNode * root, vector<int>&ans){\n        if(root == NULL) return;\n        solve(root->left, ans);\n        ans.push_back(root->val);\n        solve(root->right, ans);\n    }\n    \n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int>ans;\n        solve(root, ans);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"notes":"","topic_tags":[]}