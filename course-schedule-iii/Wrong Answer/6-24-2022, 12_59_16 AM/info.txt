{"id":729549878,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1656010756,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/729549878/","is_pending":"Not Pending","title":"Course Schedule III","memory":"N/A","code":"class Solution {\npublic:\n    struct info{\n        int duration, deadline;\n    };\n    struct comp{\n        bool operator()(const info & a, const info & b){\n            if(a.deadline == b.deadline){\n                return a.duration < b.duration;\n            }\n            return a.deadline < b.deadline;\n        }\n    };\n    vector<info>cList;\n    int scheduleCourse(vector<vector<int>>& courses) {\n        int n = courses.size();\n        for(int i=0; i<n; i++){\n            cList.push_back({courses[i][0], courses[i][1]});\n        }\n        sort(cList.begin(), cList.end(), comp());\n        int curr = 0;\n        priority_queue<int>pq;\n        for(int i=0; i<n; i++){\n            if(curr + cList[i].duration <= cList[i].deadline){\n                curr += cList[i].duration;\n                pq.push(cList[i].duration);\n            }\n            if(!pq.empty() && pq.top() > cList[i].duration){\n                curr -= pq.top();\n                pq.pop();\n                curr += cList[i].duration;\n                pq.push(cList[i].duration);\n            }\n        }\n        return pq.size();\n    }\n};","compare_result":"0111110101011010110100101110001100000111110001111111101111000111101111111100000011111010010101111","title_slug":"course-schedule-iii","has_notes":false,"notes":"","topic_tags":[]}