{"id":667396040,"lang":"cpp","lang_name":"C++","time":"9Â months","timestamp":1648269713,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/667396040/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\n/*\n1->2->3->4->5\n\n2->1\n    \n*/\n\n\n\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        \n        ListNode *node = NULL;\n        ListNode *curNode = head;\n        \n        while(curNode){\n            ListNode *nxt = curNode->next;\n            curNode->next = node;\n            node = curNode;\n            curNode = nxt;\n        }\n        \n        return node;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"notes":"","topic_tags":[]}