{"id":822892517,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1665831604,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/822892517/","is_pending":"Not Pending","title":"String Compression II","memory":"N/A","code":"class Solution {\npublic:\n    \n    int get_compressed(int num){\n        if(num == 0) return 0;\n        if(num == 1) return 1;\n        if(num < 10) return 2;\n        if(num < 100) return 3;\n        return 4;\n    }\n    \n    int solve(int pos, string & s, int k, int len, int ch, vector<vector<vector<vector<int>>>> & dp){\n        if(pos >= s.size() || k < 0) return get_compressed(len);\n        // if(k==0) return 0;\n        if(dp[pos][ch][len][k] != -1) return dp[pos][ch][len][k];\n        // cout<<pos<<' '<<k<<' '<<len<<' '<<ch<<endl;\n        \n        int ret = 101;\n        int int_ch = s[pos] - 'a';\n        \n        if(k > 0) ret = min(ret, solve(pos+1, s, k-1, len, ch, dp));\n        if(ch == int_ch){\n            ret = min(ret, solve(pos+1, s, k, len+1, int_ch, dp));\n        }\n        else{\n            int compress = get_compressed(len);\n            ret = min(ret, compress + solve(pos+1, s, k, 1, int_ch, dp));\n        }\n        return (dp[pos][ch][len][ch] = ret);\n    }\n    \n    int getLengthOfOptimalCompression(string s, int k) {\n        int n = s.size();\n        vector<vector<vector<vector<int>>>>dp(n, vector<vector<vector<int>>>(27, vector<vector<int>>(n+1, vector<int>(k+1, -1))));\n        return solve(0, s, k, 0, 0, dp);\n    }\n};","compare_result":"1111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"string-compression-ii","has_notes":false,"notes":"","topic_tags":[]}