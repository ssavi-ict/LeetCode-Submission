{"id":780848946,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1661223135,"status":10,"status_display":"Accepted","runtime":"256 ms","url":"/submissions/detail/780848946/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"110.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    \n    \n    bool isPalindrome(ListNode* head) {\n        if(!head || !head->next) return true;\n        ListNode * current_node = head;\n        int total_node = 0;\n        while(current_node){\n            current_node = current_node->next;\n            total_node++;\n        }\n        \n        current_node = head;\n        ListNode * prev_node = NULL, *nextNode = NULL;\n        int temp_total = 0;\n        bool is_mid_passed = false;\n        \n        while(temp_total<total_node){\n            if(temp_total < total_node/2){\n                nextNode = current_node->next;\n                current_node->next = prev_node;\n                prev_node = current_node;\n                current_node = nextNode;\n            }\n            else{\n                if(total_node%2==1 && !is_mid_passed){\n                    current_node = current_node->next;\n                    temp_total++;\n                    is_mid_passed = true;\n                }\n                \n                if(current_node->val!=prev_node->val) return false;\n                current_node = current_node->next;\n                prev_node = prev_node->next;\n            }\n            temp_total++;\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list","has_notes":false,"notes":"","topic_tags":[]}