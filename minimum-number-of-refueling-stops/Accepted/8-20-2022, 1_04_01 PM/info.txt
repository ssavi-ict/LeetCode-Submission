{"id":778311922,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1660979041,"status":10,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/778311922/","is_pending":"Not Pending","title":"Minimum Number of Refueling Stops","memory":"16.2 MB","code":"class Solution {\npublic:\n    int minRefuelStops(int target, int startFuel, vector<vector<int>>& stations) {\n        \n        int n = stations.size();\n        priority_queue<int>available;\n        int c_fuel = startFuel, c_point = 0, ans = 0;\n        stations.push_back({target, 0});\n        \n        \n        for(int i=0; i<stations.size(); i++){\n            // cout<<stations.size()<<endl;\n            int stop = stations[i][0];  // 10, 20, 30, 60, 100\n            int fuel = stations[i][1];  // 60, 30, 30, 40, 0\n            \n            int to_dist = stop - c_point;  // 10, 20 - 10 = 10, 30 - 20 = 10, 60 - 30 = 30, 100 - 60 = 40\n            c_fuel = c_fuel - to_dist; // 0, 0 - 10 = -10, 50 - 10 = 40, 40 - 30 = 10, 10 - 40 = -30\n            \n            while(!available.empty() && c_fuel<0){\n                c_fuel += available.top();  // 10\n                available.pop();\n                ans++;  // 1 2\n            }\n            if(c_fuel < 0) return -1;\n            c_point = stop;   // 10, 20, 30, 60, 100\n            if(c_point >= target){\n                break;\n            }\n            \n            available.push(fuel); // 30, 30\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-refueling-stops","has_notes":false,"notes":"","topic_tags":[]}