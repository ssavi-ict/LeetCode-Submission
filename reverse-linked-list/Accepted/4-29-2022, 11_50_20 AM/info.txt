{"id":689518714,"lang":"cpp","lang_name":"C++","time":"7 months, 4 weeks","timestamp":1651211420,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/689518714/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* curr, ListNode* previous) {\n        if(curr->next == NULL) {\n            curr->next = previous;\n            return curr;\n        }\n        ListNode* next = curr->next;\n        curr->next = previous;\n        return reverseList(next, curr);\n        \n    }\n    ListNode* reverseList(ListNode* head) {\n        if(head == NULL)\n            return NULL;\n        return reverseList(head, NULL);\n        \n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"notes":"","topic_tags":[]}