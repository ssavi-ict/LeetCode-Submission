{"id":713205979,"lang":"cpp","lang_name":"C++","time":"6 months, 3 weeks","timestamp":1654222723,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/713205979/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"N/A","code":"class NumMatrix {\npublic:\n    int cum[201][201], row, col;\n    NumMatrix(vector<vector<int>>& matrix) {\n        row = matrix.size();\n        col = matrix[0].size();\n        for(int i=0; i<row; i++){\n            for(int j=0; j<col; j++){\n                if(j == 0) cum[i][j] = matrix[i][j];\n                else cum[i][j] = cum[i][j-1] + matrix[i][j];\n            }\n        }\n    }\n    \n    int sumRegion(int row1, int col1, int row2, int col2) {\n        int ans = 0;\n        for(int i=row1; i<=row2; i++){\n            int to = (col1 - 1) <= 0 ? 0 : col1 - 1;\n            ans = ans + (cum[i][col2] - cum[i][col1 - 1]);\n        }\n        return ans;\n    }\n};\n\n/**\n * Your NumMatrix object will be instantiated and called as such:\n * NumMatrix* obj = new NumMatrix(matrix);\n * int param_1 = obj->sumRegion(row1,col1,row2,col2);\n */","compare_result":"100000000000000000000000","title_slug":"range-sum-query-2d-immutable","has_notes":false,"notes":"","topic_tags":[]}