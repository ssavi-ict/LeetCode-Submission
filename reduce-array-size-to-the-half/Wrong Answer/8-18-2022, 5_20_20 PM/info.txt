{"id":776859570,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1660821620,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/776859570/","is_pending":"Not Pending","title":"Reduce Array Size to The Half","memory":"N/A","code":"class Solution {\npublic:\n    int cnt_arr[100001], mxstart = 0;\n    int fcount[100001];\n    \n    int minSetSize(vector<int>& arr) {\n        for(int i=0; i<arr.size(); i++){\n            cnt_arr[arr[i]]++;\n            mxstart = max(mxstart, cnt_arr[arr[i]]);\n        }\n        for(int i=1; i<=100000; i++){\n            if(cnt_arr[i]) fcount[cnt_arr[i]]++;\n        }\n\n        int ans = 0, cnt = arr.size()/2;\n        // cout<<mxstart<<' '<<fcount[mxstart]<<endl;\n        for(int i=mxstart; i>=1 && cnt>0; i--){\n            if(fcount[i]){\n                int times = fcount[i];\n                int total_occurance = times * i;\n                // cout<<i<<' '<<fcount[i]<<' '<<cnt<<endl;\n                if(cnt >= total_occurance){\n                    cnt = cnt - total_occurance;\n                    ans += times;\n                }\n                else{\n                    // 5 5 5 3 3 3 7 7 7 -> 3 | 2 | 4 | 8\n                    int div = (cnt / i) + (cnt%i==0)?0:1;\n                    cnt = cnt - (i * div);\n                    ans += div;\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"110100000000000000000000010110100","title_slug":"reduce-array-size-to-the-half","has_notes":false,"notes":"","topic_tags":[]}