{"id":722515245,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1655260235,"status":10,"status_display":"Accepted","runtime":"235 ms","url":"/submissions/detail/722515245/","is_pending":"Not Pending","title":"Longest String Chain","memory":"50.8 MB","code":"class Solution {\npublic:\n    unordered_map<string, int>chain;\n    struct comp{\n        bool operator()(const string &a, const string &b){\n            return a.size() < b.size();\n        }\n    };\n    \n    int longestStrChain(vector<string>& words) {\n        sort(words.begin(), words.end(), comp());\n        int ans = 0;\n        for (int i=0; i<words.size(); i++){\n            int len = words[i].size();\n            if(len == 1){\n                chain[words[i]] = 1;\n                ans = 1;\n                continue;\n            }\n            for(int j=0; j<len; j++){\n                if(j==0){\n                    // cout<<\"H \"<<words[i].substr(1, len-1)<<endl;\n                    chain[words[i]] = max(chain[words[i]], chain[words[i].substr(1, len-1)]+1);\n                }\n                else if(j == len-1){\n                    // cout<<\"K \"<<words[i].substr(0, len-1)<<endl;\n                    chain[words[i]] = max(chain[words[i]], chain[words[i].substr(0, len-1)]+1);\n                }\n                else{\n                    // cout<<\"P \"<<words[i].substr(0, j)+words[i].substr(j+1)<<endl;\n                    chain[words[i]] = max(chain[words[i]], chain[words[i].substr(0, j)+words[i].substr(j+1)]+1);\n                }\n                ans = max(ans, chain[words[i]]);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-string-chain","has_notes":false,"notes":"","topic_tags":[]}