{"id":672724605,"lang":"cpp","lang_name":"C++","time":"8 months, 3 weeks","timestamp":1648960585,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/672724605/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int>out;\n        stack<TreeNode *>st;\n        \n        while(root){\n            st.push(root);\n            root = root->left;\n        }\n        \n        while(st.size() > 0){\n            TreeNode *curNode = st.top();\n            st.pop();\n            out.push_back(curNode->val);\n            if(curNode->right){\n                TreeNode *right = curNode->right;\n                while(right){\n                    st.push(right);\n                    right = right->left;\n                }\n            }\n        }\n        \n        return out;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"notes":"","topic_tags":[]}