{"id":771234399,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1660237615,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/771234399/","is_pending":"Not Pending","title":"Graph Valid Tree","memory":"12.3 MB","code":"class Solution {\npublic:\n    \nvector<int>graph[2005];\nbool visited[2002]; \n\nvoid makeGraph(vector<vector<int>>& edges){\n    for(int i=0; i<edges.size(); i++){\n      graph[edges[i][0]].push_back(edges[i][1]);\n      graph[edges[i][1]].push_back(edges[i][0]);\n    }\n}\n\nint countNode;\n\nvoid dfs(int u){\n  visited[u] = true;\n  countNode++;\n  for(int i=0; i<graph[u].size(); i++){\n    int v = graph[u][i];\n    if(!visited[v]) dfs(v);\n  }\n}\n\nbool validTree(int n, vector<vector<int>>& edges)\n{\n    if(edges.size()<n-1 || edges.size()>=n) return false;\n    makeGraph(edges);\n    countNode = 0;\n    dfs(0);\n    return countNode == n;\n}\n};","compare_result":"111111111111111111111111111111111111111111111","title_slug":"graph-valid-tree","has_notes":false,"notes":"","topic_tags":[]}