{"id":785963895,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1661741878,"status":10,"status_display":"Accepted","runtime":"90 ms","url":"/submissions/detail/785963895/","is_pending":"Not Pending","title":"Number of Islands","memory":"13.1 MB","code":"class Solution {\npublic:\n    \n    queue<pair<int, int>>myQ;\n    \n    void BFS(int i, int j, vector<vector<char>>&grid, int m, int n){\n        myQ.push(make_pair(i, j));\n        grid[i][j] = '0';\n        while(!myQ.empty()){\n            auto u = myQ.front();\n            myQ.pop();\n            int vx = u.first, vy = u.second;\n            if(vx+1 >= 0 && vx+1<m && vy>=0 && vy<n && grid[vx+1][vy] == '1'){\n                grid[vx+1][vy] = '0';\n                myQ.push(make_pair(vx+1, vy));\n            }\n            if(vx-1 >= 0 && vx-1<m && vy>=0 && vy<n && grid[vx-1][vy] == '1'){\n                grid[vx-1][vy] = '0';\n                myQ.push(make_pair(vx-1, vy));\n            }\n            \n            if(vx >= 0 && vx<m && vy+1>=0 && vy+1<n && grid[vx][vy+1] == '1'){\n                grid[vx][vy+1] = '0';\n                myQ.push(make_pair(vx, vy+1));\n            }\n            \n            if(vx >= 0 && vx<m && vy-1>=0 && vy-1<n && grid[vx][vy-1] == '1'){\n                grid[vx][vy-1] = '0';\n                myQ.push(make_pair(vx, vy-1));\n            }\n            \n        }\n    }\n    \n    int numIslands(vector<vector<char>>& grid) {\n        int m = grid.size();\n        int n = grid[0].size();\n        \n        int cnt = 0;\n        for(int i=0; i<m; i++){\n            for(int j=0; j<n; j++){\n                if(grid[i][j] == '1'){\n                    cnt++;\n                    BFS(i, j, grid, m, n);\n                }\n            }\n        }\n        return cnt;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"notes":"","topic_tags":[]}