{"id":858934225,"lang":"cpp","lang_name":"C++","time":"1 week, 4 days","timestamp":1670900051,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/858934225/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"9.9 MB","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& matrix) {\n        int n = matrix.size(), ans = INT_MAX;\n        for(int i=n-2; i>=0; i--){\n            for(int j=0; j<n; j++){\n                int candidate = matrix[i][j] + matrix[i+1][j];\n                if((j-1) >= 0){\n                    candidate = min(candidate, matrix[i][j] + matrix[i+1][j-1]);\n                }\n                if((j+1)<n){\n                    candidate = min(candidate, matrix[i][j] + matrix[i+1][j+1]);\n                }\n                matrix[i][j] = candidate;\n            }\n        }\n\n        for(int i=0; i<n; i++){\n            ans = min(ans, matrix[0][i]);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum","has_notes":false,"notes":"","topic_tags":[]}