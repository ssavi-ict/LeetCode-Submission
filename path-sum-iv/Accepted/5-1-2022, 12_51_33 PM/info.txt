{"id":690764740,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1651387893,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/690764740/","is_pending":"Not Pending","title":"Path Sum IV","memory":"10.2 MB","code":"class Solution {\npublic:\n    map<pair<int, int>, int> tree; //{level, position} - val\n    int sum = 0;\n    \n    void DFS(int level, int pos, int pathsum = 0)\n    {\n        if(tree.find({level+1, pos<<1}) == tree.end() && tree.find({level+1, 1+(pos<<1)}) == tree.end()){\n            sum += (pathsum + tree[{level, pos}]);\n            return;\n        }\n        \n        if(tree.find({level+1, pos<<1}) != tree.end())\n            DFS(level+1, pos<<1, pathsum+tree[{level, pos}]);\n        \n        if(tree.find({level+1, 1+(pos<<1)}) != tree.end())\n            DFS(level+1, 1+(pos<<1), pathsum+tree[{level, pos}]);\n    }\n    \n    int pathSum(vector<int>& nums) {\n        \n        for(int num : nums){\n            int val = num % 10;\n            num /= 10;\n            int pos = num % 10;\n            num /= 10;\n            int level = num;\n            tree[{level, pos-1}] = val;\n        }\n        \n        DFS(1, 0);\n        \n        return sum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iv","has_notes":false,"notes":"","topic_tags":[]}