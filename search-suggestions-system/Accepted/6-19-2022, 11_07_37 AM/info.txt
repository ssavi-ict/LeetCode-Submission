{"id":725691396,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1655615257,"status":10,"status_display":"Accepted","runtime":"174 ms","url":"/submissions/detail/725691396/","is_pending":"Not Pending","title":"Search Suggestions System","memory":"79.5 MB","code":"class Solution {\npublic:\n    \n    struct TrieNode{\n       struct TrieNode * next[26];\n        bool isEnd;\n    };\n    \n    struct TrieNode * getNode(){\n        struct TrieNode * current = new TrieNode;\n        for(int i=0; i<26; i++){\n            current->next[i] = NULL;\n        }\n        current->isEnd = false;\n        return current;\n    }\n    \n    struct TrieNode * root = getNode();\n    \n    void insert(vector<string>&products){\n        for(int i=0; i<products.size(); i++){\n            struct TrieNode * current = root;\n            for(int j=0; j<products[i].size(); j++){\n                int idx = products[i][j] - 'a';\n                if(current->next[idx] == NULL){\n                    current->next[idx] = getNode();\n                }\n                current = current->next[idx];\n            }\n            current->isEnd = true;\n        }\n    }\n    \n    void search(struct TrieNode * root, vector<string>&result, string &str){\n        if(result.size()==3){\n            return;\n        }\n        // cout<<str<<endl;\n        if(root->isEnd){\n            result.push_back(str);\n        }\n        for(char i='a'; i<='z'; i++){\n            int idx = i-'a';\n            if(root->next[idx]){\n                str.push_back(i);\n                search(root->next[idx], result, str);\n                str.pop_back();\n            }\n        }\n    }\n    \n    vector< vector<string> >ans;\n    \n    vector<vector<string>> suggestedProducts(vector<string>& products, string searchWord) {\n        insert(products);\n        bool OK = false;\n        for(int i=0; i<searchWord.size(); i++){\n            TrieNode * current = root;\n            vector<string>ret;\n            if(OK){\n                ans.push_back(ret);\n                continue;\n            }\n            for(int j=0; j<=i; j++){\n                int idx = searchWord[j] - 'a';\n                if(current->next[idx] == NULL){\n                    ans.push_back(ret);\n                    OK = true;\n                    break;\n                }\n                current = current->next[idx];\n            }\n            \n            if(OK) continue;\n            \n            string str = searchWord.substr(0,i+1);\n            search(current, ret, str);\n            ans.push_back(ret);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"search-suggestions-system","has_notes":false,"notes":"","topic_tags":[]}