{"id":797112257,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1662901237,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/797112257/","is_pending":"Not Pending","title":"Design Hit Counter","memory":"N/A","code":"class HitCounter {\npublic:\n    unordered_map<int, int>mymap;\n    vector<int>t_stamp;\n    HitCounter() {\n        mymap.clear();\n        t_stamp.clear();\n    }\n    \n    void hit(int timestamp) {\n        t_stamp.emplace_back(timestamp);\n        mymap[timestamp]++;\n    }\n    \n    int getHits(int timestamp) {\n        int ans = 0;\n        int lidx = lower_bound(t_stamp.begin(), t_stamp.end(), timestamp) - t_stamp.begin();\n        if(lidx == t_stamp.size()) lidx--;\n       \n        for(int i=lidx; i>=0; i--){\n            // cout<<i<<' '<<t_stamp[i]<<endl;\n            if(timestamp - t_stamp[i] < 300){\n                ans += mymap[t_stamp[i]];\n            }\n            else break;\n        }\n        return ans;\n    }\n};\n\n/**\n * Your HitCounter object will be instantiated and called as such:\n * HitCounter* obj = new HitCounter();\n * obj->hit(timestamp);\n * int param_2 = obj->getHits(timestamp);\n */","compare_result":"110001111111111111101111","title_slug":"design-hit-counter","has_notes":false,"notes":"","topic_tags":[]}