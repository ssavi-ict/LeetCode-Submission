{"id":725365461,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1655580318,"status":10,"status_display":"Accepted","runtime":"476 ms","url":"/submissions/detail/725365461/","is_pending":"Not Pending","title":"Prefix and Suffix Search","memory":"179.6 MB","code":"class WordFilter {\npublic:\n    \n    struct TrieNode{\n        struct TrieNode * next[27];\n        int idx;\n    };\n    \n    struct TrieNode * getNode(){\n        struct TrieNode * pNode = new TrieNode;\n        pNode->idx = -1;\n        for(int i=0; i<27; i++){\n            pNode->next[i] = NULL;\n        }\n        return pNode;\n    }\n    \n    struct TrieNode * root = getNode();\n    \n    void insert(string &str, int pos){\n        for(int j=str.size()-1; j>=0; j--){\n            struct TrieNode * current = root;\n            for(int i=j; i<str.size(); i++){\n                // cout<<str[i];\n                int idx = str[i] - 'a';\n                if(current->next[idx] == NULL){\n                    current->next[idx] = getNode();\n                }\n                current = current->next[idx];\n                current->idx = pos;\n            }\n            \n            int idx = 26;\n            if(current->next[idx] == NULL){\n                current->next[idx] = getNode();\n            }\n            current = current->next[idx];\n            current->idx = pos;\n            // cout<<'$';\n            \n            for(int i=0; i<str.size(); i++){\n                // cout<<str[i];\n                int idx = str[i] - 'a';\n                if(current->next[idx] == NULL){\n                    current->next[idx] = getNode();\n                }\n                current = current->next[idx];\n                current->idx = pos;\n            }\n            // cout<<endl;\n        }\n    }\n    \n    int search(string str){\n        struct TrieNode * current = root;\n        for(int i=0; i<str.size(); i++){\n            // cout<<str[i];\n            int idx = (str[i]=='$')?26:str[i]-'a';\n            if(current->next[idx]==NULL) return -1;\n            current = current->next[idx];\n        }\n        // cout<<endl;\n        return current->idx;\n    }\n\n    \n    WordFilter(vector<string>& words) {\n        for(int i=0; i<words.size(); i++){\n            insert(words[i], i);\n        }\n    }\n    \n    int f(string prefix, string suffix) {\n        suffix += '$';\n        for(int i=0; i<prefix.size(); i++){\n            suffix += prefix[i];\n        }\n        return search(suffix);\n    }\n};\n\n/**\n * Your WordFilter object will be instantiated and called as such:\n * WordFilter* obj = new WordFilter(words);\n * int param_1 = obj->f(prefix,suffix);\n */","compare_result":"1111111111111","title_slug":"prefix-and-suffix-search","has_notes":false,"notes":"","topic_tags":[]}