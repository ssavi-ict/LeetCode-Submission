{"id":753962301,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1658515948,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/753962301/","is_pending":"Not Pending","title":"Partition List","memory":"10.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n        ListNode * list1 = NULL, *list1head = NULL;\n        ListNode * list2 = NULL, *list2head = NULL;\n        while(head){\n            ListNode * node = new ListNode(head->val);\n            if(head->val < x){\n                if(!list1head){\n                    list1 = list1head = node;\n                }\n                else{\n                    list1->next = node; list1 = list1->next;\n                }\n            }\n            else{\n                if(!list2head){\n                    list2 = list2head = node;\n                }\n                else{\n                    list2->next = node; list2 = list2->next;\n                }\n            }\n            head = head->next;\n        }\n        \n        if(list2head){\n            if(!list1)\n                list1head = list2head;\n            else\n                list1->next = list2head;\n        }\n        return list1head;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list","has_notes":false,"notes":"","topic_tags":[]}