{"id":791030079,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1662269010,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/791030079/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n     \n    void solve(TreeNode * root, int vert, vector<vector<pair<int, int> > >&ans, int lvl){\n        ans[vert].push_back(make_pair(lvl, root->val));\n        if(root->left){\n            solve(root->left, vert-1, ans, lvl+1);\n        }\n        if(root->right){\n            solve(root->right, vert+1, ans, lvl+1);\n        }\n    }\n    \n    void get_level(TreeNode * root, int lvl, int & start_level, int & end_level){\n        if(root->left){\n            start_level = min(start_level, lvl-1);\n            get_level(root->left, lvl-1, start_level, end_level);\n        }\n        \n        if(root->right){\n            end_level = max(end_level, lvl+1);\n            get_level(root->right, lvl+1, start_level, end_level);\n        }\n    }\n    \n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        int start_level = 0, end_level = 0;\n        get_level(root, 0, start_level, end_level);\n        \n        // cout<<start_level<<' '<<end_level<<endl;\n        vector< vector<pair<int, int> > >rc_ans(end_level-start_level+1);\n        solve(root, -start_level, rc_ans, 0);\n        \n        \n        vector< vector<int>> ans(end_level - start_level + 1);\n        for(int i=0; i<rc_ans.size(); i++){\n            vector<int>sorted_list;\n            int pre_level = -1;\n            for(int j=0; j<rc_ans[i].size(); j++){\n                if(rc_ans[i][j].first != pre_level){\n                    pre_level = rc_ans[i][j].first;\n                    if(sorted_list.size() > 0){\n                        sort(sorted_list.begin(), sorted_list.end());\n                        for(auto it: sorted_list){\n                            ans[i].push_back(it);\n                        }\n                    }\n                    sorted_list.clear();\n                }\n                \n                if(rc_ans[i][j].first == pre_level){\n                    sorted_list.push_back(rc_ans[i][j].second);\n                }\n                \n            }\n            if(sorted_list.size() > 0){\n                // cout<<1<<endl;\n                sort(sorted_list.begin(), sorted_list.end());\n                for(auto it: sorted_list){\n                    ans[i].push_back(it);\n                }\n            }\n            // cout<<'1'<<endl;\n        }\n        return ans;\n    }\n};","compare_result":"11111111110111000000000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false,"notes":"","topic_tags":[]}