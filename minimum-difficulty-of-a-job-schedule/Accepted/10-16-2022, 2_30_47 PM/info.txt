{"id":823606672,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1665909047,"status":10,"status_display":"Accepted","runtime":"98 ms","url":"/submissions/detail/823606672/","is_pending":"Not Pending","title":"Minimum Difficulty of a Job Schedule","memory":"7.9 MB","code":"class Solution {\npublic:\n\n    const int inf = 1e6;\n\n    int solve(int pos, int d, vector<int> & jd, vector<vector<int>> & dp, int len){\n        if(pos >= len) return 0;\n        if(d <= 0) return inf;\n        if(dp[pos][d] != -1) return dp[pos][d];\n\n        int ret = inf;\n        int curMax = jd[pos];\n        for(int i=pos; i<=len - d; i++){\n            curMax = max(curMax, jd[i]);\n            ret = min(ret, curMax + solve(i+1, d-1, jd, dp, len));\n        }\n        return (dp[pos][d] = ret);\n    }\n\n    int minDifficulty(vector<int>& jobDifficulty, int d) {\n        int n = jobDifficulty.size();\n        if(d > n) return -1;\n        vector<vector<int>>dp(n+1, vector<int>(d+1, -1));\n        int ans = solve(0, d, jobDifficulty, dp, n);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"minimum-difficulty-of-a-job-schedule","has_notes":false,"notes":"","topic_tags":[]}