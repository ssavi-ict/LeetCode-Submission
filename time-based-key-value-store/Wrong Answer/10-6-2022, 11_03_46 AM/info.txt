{"id":816247052,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1665032626,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/816247052/","is_pending":"Not Pending","title":"Time Based Key-Value Store","memory":"N/A","code":"class TimeMap {\npublic:\n\n    unordered_map<string, string>umap;\n    vector<int>timeValue;\n\n    TimeMap() {\n        \n    }\n    \n    void set(string key, string value, int timestamp) {\n        umap[to_string(timestamp)+key] = value;\n        timeValue.push_back(timestamp);\n    }\n    \n    string get(string key, int timestamp) {\n        int ub_id = upper_bound(timeValue.begin(), timeValue.end(), timestamp) - timeValue.begin();\n        if(ub_id == 0) return \"\";\n        ub_id--;\n        return umap[to_string(timeValue[ub_id])+key];\n    }\n};\n\n/**\n * Your TimeMap object will be instantiated and called as such:\n * TimeMap* obj = new TimeMap();\n * obj->set(key,value,timestamp);\n * string param_2 = obj->get(key,timestamp);\n */","compare_result":"111000000000000000000000000000000000000000001111","title_slug":"time-based-key-value-store","has_notes":false,"notes":"","topic_tags":[]}