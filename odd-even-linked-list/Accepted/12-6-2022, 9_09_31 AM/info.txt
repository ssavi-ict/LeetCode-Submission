{"id":855340025,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1670296171,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/855340025/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"10.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        \n        if(!head || !head->next || !head->next->next) return head;\n        ListNode * oddHead = head, *evenHead = head->next;\n        ListNode * curOdd = oddHead, *curEven = evenHead;\n        head = head->next->next;\n        while(true){\n            if(!head) break;\n            curOdd->next = head;\n            head = head->next;\n            curOdd = curOdd->next;\n            curOdd->next = NULL;\n\n\n            if(!head) break;\n            curEven->next = head;\n            head = head->next;\n            curEven = curEven->next;\n            curEven->next = NULL; \n            \n        }\n        curEven->next = NULL;\n        curOdd->next = evenHead;\n        return oddHead;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list","has_notes":false,"notes":"","topic_tags":[]}