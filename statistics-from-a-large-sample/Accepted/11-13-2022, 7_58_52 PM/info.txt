{"id":842668595,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1668347932,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/842668595/","is_pending":"Not Pending","title":"Statistics from a Large Sample","memory":"8.4 MB","code":"class Solution {\npublic:\n    vector<double> sampleStats(vector<int>& count) {\n        int maxSample = INT_MIN, minSample = INT_MAX, sampleCount = 0;\n        double totalValue = 0;\n        int maxSampleValue = 0, modeValue;\n        for(int i=0; i<256; i++){\n            if(count[i] > 0){\n                totalValue += (i * 1.0) * (count[i]  * 1.0);\n                sampleCount += count[i];\n                maxSample = max(maxSample, i);\n                minSample = min(minSample, i);\n                if(maxSampleValue < count[i]){\n                    maxSampleValue = count[i];\n                    modeValue = i;\n                }\n            }\n        }\n        double meanValue = totalValue / (sampleCount * 1.0);\n        int last = 0, to_limit = 0;\n        double medianValue;\n        for(int i=0; i<256; i++){\n            if(count[i] > 0){\n                if(to_limit + count[i] > (sampleCount /2 )){\n                    int remain = (sampleCount /2) - to_limit;\n                    if(sampleCount & 1){\n                        medianValue = i * 1.0;\n                    }\n                    else{\n                        if(remain < 1){\n                            medianValue = (last + i) / 2.0;\n                        }\n                        else{\n                            medianValue = i * 1.0;\n                        }\n                    }\n                    break;\n                }\n                to_limit += count[i];\n                last = i;\n            }\n        }\n        return {minSample*1.0, maxSample*1.0, meanValue, medianValue, modeValue*1.0};\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"statistics-from-a-large-sample","has_notes":false,"notes":"","topic_tags":[]}