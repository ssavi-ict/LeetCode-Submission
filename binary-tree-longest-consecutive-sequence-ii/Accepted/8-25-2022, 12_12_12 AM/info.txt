{"id":782392293,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1661364732,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/782392293/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence II","memory":"22.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    struct data{\n        int incr, decr;\n    };\n    typedef data DATA;\n    \n    int maxSeq;\n    \n    DATA solve(TreeNode * root, DATA current){\n        if(root->left){\n            DATA left = solve(root->left, {1,1});\n            if(root->val + 1 == root->left->val){\n                current.incr = max(left.incr + 1, current.incr);\n            }\n            else if(root->val - 1 == root->left->val){\n                current.decr = max(left.decr + 1, current.decr);\n            }\n        }\n        if(root->right){\n            DATA right = solve(root->right, {1,1});\n            if(root->val + 1 == root->right->val){\n                current.incr = max(right.incr + 1, current.incr);\n            }\n            \n            if(root->val - 1 == root->right->val){\n                current.decr = max(right.decr + 1, current.decr);\n            }\n        }\n        maxSeq = max(maxSeq, current.incr + current.decr - 1);\n        return current;\n    }\n    \n    int longestConsecutive(TreeNode* root) {\n        maxSeq = 1;\n        solve(root, {1,1});\n        return maxSeq;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-longest-consecutive-sequence-ii","has_notes":false,"notes":"","topic_tags":[]}