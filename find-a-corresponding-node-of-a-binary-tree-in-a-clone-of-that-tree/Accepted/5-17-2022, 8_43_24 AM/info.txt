{"id":701102910,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1652755404,"status":10,"status_display":"Accepted","runtime":"692 ms","url":"/submissions/detail/701102910/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"164 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    bool flag = false;\n    TreeNode * ans;\n    TreeNode* getTargetCopy(TreeNode* original, TreeNode* cloned, TreeNode* target) {\n        if(!flag && original->val==cloned->val && cloned->val==target->val){\n            //cout<<\"Hi\"<<endl;\n            flag = true; ans = cloned;\n            return ans;\n        }\n        \n        if(original->left && !ans){\n            ans = getTargetCopy(original->left, cloned->left, target);\n        }\n        if(original->right && !ans){\n            ans = getTargetCopy(original->right, cloned->right, target);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree","has_notes":false,"notes":"","topic_tags":[]}