{"id":703622114,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1653074329,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/703622114/","is_pending":"Not Pending","title":"Unique Paths II","memory":"7.6 MB","code":"class Solution {\npublic:\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\n        int m = obstacleGrid.size(), n = obstacleGrid[0].size();\n        if(obstacleGrid[0][0] || obstacleGrid[m-1][n-1]) return 0;\n        int dp[2][n+1];\n        memset(dp, 0, sizeof(dp));\n        \n        dp[0][0] = 1;\n        for(int i=0; i<m; i++){\n            for(int j=0; j<n; j++){\n                if(i==0){\n                    if(!j) continue;\n                    dp[i][j] = dp[i][j-1];\n                    if(obstacleGrid[i][j]){\n                        dp[i][j] = 0;\n                    }\n                }\n                else{\n                    if(obstacleGrid[i][j]){\n                        dp[i%2][j] = 0;\n                        continue;\n                    }\n                    if(i%2){\n                        dp[i%2][j] = (j==0)? dp[i%2 - 1][j] : dp[i%2 - 1][j] + dp[i%2][j-1];\n                    }\n                    else{\n                        dp[i%2][j] = (j==0)? dp[1 - i%2][j] : dp[1 - i%2][j] + dp[i%2][j-1];\n                    }\n                }\n            }\n        }\n        return (m%2)?dp[0][n-1]:dp[1][n-1];\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"unique-paths-ii","has_notes":false,"notes":"","topic_tags":[]}