{"id":770686153,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1660184110,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/770686153/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root) {\n        if(!root) return true;\n        bool ret = true;\n        if(root->left){\n            ret = ret & (root->val > root->left->val) & isValidBST(root->left);\n        }\n        if(root->right){\n            ret = ret & (root->val < root->right->val) & isValidBST(root->right);\n        }\n        return ret;\n    }\n};\n\n/*\n\n\n\n*/","compare_result":"11111111111001001001111111111111111111111111111111111111111111111111111101111101","title_slug":"validate-binary-search-tree","has_notes":false,"notes":"","topic_tags":[]}