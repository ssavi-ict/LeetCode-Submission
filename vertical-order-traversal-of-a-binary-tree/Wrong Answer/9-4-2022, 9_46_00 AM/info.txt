{"id":790981836,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1662263160,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/790981836/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void solve(TreeNode * root, int vert, vector<vector<int>>&ans){\n        ans[vert].push_back(root->val);\n        if(root->left){\n            solve(root->left, vert-1, ans);\n        }\n        if(root->right){\n            solve(root->right, vert+1, ans);\n        }\n    }\n    \n    void get_level(TreeNode * root, int lvl, int & start_level, int & end_level){\n        if(root->left){\n            start_level = min(start_level, lvl-1);\n            get_level(root->left, lvl-1, start_level, end_level);\n        }\n        \n        if(root->right){\n            end_level = max(end_level, lvl+1);\n            get_level(root->right, lvl+1, start_level, end_level);\n        }\n    }\n    \n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        int start_level = 0, end_level = 0;\n        get_level(root, 0, start_level, end_level);\n        \n        // cout<<start_level<<' '<<end_level<<endl;\n        vector< vector<int> >ans(end_level-start_level+1);\n        solve(root, -start_level, ans);\n        for(int i=0; i<ans.size(); i++){\n            sort(ans[i].begin(), ans[i].end());\n        }\n        return ans;\n    }\n};","compare_result":"11111111111001101000000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false,"notes":"","topic_tags":[]}