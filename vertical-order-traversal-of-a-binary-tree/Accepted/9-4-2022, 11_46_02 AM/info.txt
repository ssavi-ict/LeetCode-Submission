{"id":791045302,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1662270362,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/791045302/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"13.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int mx_level;\n    \n    void solve(TreeNode * root, int vert, vector<vector<pair<int, int> > >&ans, int lvl){\n        mx_level = max(mx_level, lvl);\n        ans[vert].push_back(make_pair(lvl, root->val));\n        if(root->left){\n            solve(root->left, vert-1, ans, lvl+1);\n        }\n        if(root->right){\n            solve(root->right, vert+1, ans, lvl+1);\n        }\n    }\n    \n    void get_level(TreeNode * root, int lvl, int & start_level, int & end_level){\n        if(root->left){\n            start_level = min(start_level, lvl-1);\n            get_level(root->left, lvl-1, start_level, end_level);\n        }\n        \n        if(root->right){\n            end_level = max(end_level, lvl+1);\n            get_level(root->right, lvl+1, start_level, end_level);\n        }\n    }\n    \n    vector<int>get_level_wise_sorted(vector< vector<pair<int ,int> > > &items, int column){\n        map<int, vector<int>>level_value;\n        vector<int>ret;\n        \n        for(int i=0; i<items[column].size(); i++){\n            int c_level = items[column][i].first;\n            int c_value = items[column][i].second;\n            level_value[c_level].push_back(c_value);\n        }\n        \n        for(auto it=level_value.begin(); it!=level_value.end(); ++it){\n            sort(level_value[it->first].begin(), level_value[it->first].end());\n            for(auto val: level_value[it->first]){\n                ret.push_back(val);\n            }\n        }\n        return ret;\n    }\n    \n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        int start_level = 0, end_level = 0;\n        get_level(root, 0, start_level, end_level);\n        \n        mx_level = 0;\n        vector< vector<pair<int, int> > >rc_ans(end_level-start_level+1);\n        solve(root, -start_level, rc_ans, 0);\n        \n        \n        vector< vector<int>> ans;\n        for(int i=0; i<rc_ans.size(); i++){\n            ans.push_back(get_level_wise_sorted(rc_ans, i));\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"vertical-order-traversal-of-a-binary-tree","has_notes":false,"notes":"","topic_tags":[]}