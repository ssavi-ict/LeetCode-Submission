{"id":818367769,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1665289617,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/818367769/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    unordered_map<int, int>numbers;\n\n    void recurse(TreeNode * root){\n        if(root == NULL) return;\n        numbers[root->val]++;\n        recurse(root->left);\n        recurse(root->right);\n    }\n\n    bool findTarget(TreeNode* root, int k) {\n        numbers.clear();\n        recurse(root);\n        for(auto it=numbers.begin(); it!=numbers.end(); ++it){\n            int left = k - it->first;\n            if(left!=it->first && numbers[left] > 0){\n                return true;\n            }\n            \n        }\n        return false;\n    }\n};","compare_result":"11101111111111111111111111111111111111111111101111111111111111111111111111101011111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111011010011100000100101111110001000000000111101101010000101100010110000000000000000000000000000100000000000010000000000000000000000000000000000000000000000000000000110011100100110000000000000000000110000100000","title_slug":"two-sum-iv-input-is-a-bst","has_notes":false,"notes":"","topic_tags":[]}