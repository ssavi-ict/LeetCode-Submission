{"id":725404509,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1655584629,"status":10,"status_display":"Accepted","runtime":"1065 ms","url":"/submissions/detail/725404509/","is_pending":"Not Pending","title":"Prefix and Suffix Search","memory":"175.5 MB","code":"class WordFilter {\npublic:\n    unordered_map<string, int>mymap;\n    WordFilter(vector<string>& words) {\n        for(int i=0; i<words.size(); i++){\n            string word = \"\";\n            for(int j=words[i].size()-1; j>=0; j--){\n                word = words[i][j] + word;\n                string tmp = word + '$';\n                for(int l=0; l<words[i].size(); l++){\n                    tmp = tmp + words[i][l];\n                    mymap[tmp] = i;\n                }\n                \n            }\n        }\n    }\n    \n    int f(string prefix, string suffix) {\n        suffix += \"$\" + prefix;\n        if(mymap.find(suffix)==mymap.end()) return -1;\n        return mymap[suffix];\n    }\n};\n\n/**\n * Your WordFilter object will be instantiated and called as such:\n * WordFilter* obj = new WordFilter(words);\n * int param_1 = obj->f(prefix,suffix);\n */","compare_result":"1111111111111","title_slug":"prefix-and-suffix-search","has_notes":false,"notes":"","topic_tags":[]}