{"id":781472454,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1661279454,"status":10,"status_display":"Accepted","runtime":"50 ms","url":"/submissions/detail/781472454/","is_pending":"Not Pending","title":"Binary Tree Longest Consecutive Sequence","memory":"32.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    // int ans;\n    void solve(TreeNode * root, int len, int &ans){\n        if(!root) return;\n        if(root->left){\n            int diff = root->left->val - root->val == 1? len + 1 : 1;\n            ans = max(ans, diff);\n            solve(root->left, diff, ans);\n        }\n        if(root->right){\n            int diff = root->right->val - root->val == 1? len + 1 : 1;\n            ans = max(ans, diff);\n            solve(root->right, diff, ans);\n        }\n    }\n    \n    int longestConsecutive(TreeNode* root) {\n        int ans = 1;\n        solve(root, 1, ans);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-longest-consecutive-sequence","has_notes":false,"notes":"","topic_tags":[]}