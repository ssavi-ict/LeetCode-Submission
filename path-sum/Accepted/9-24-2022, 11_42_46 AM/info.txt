{"id":807295704,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1663998166,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/807295704/","is_pending":"Not Pending","title":"Path Sum","memory":"21.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void getPathSum(TreeNode * root, int targetSum, bool & ans){\n        int value = root->val;\n        // cout<<targetSum<<' '<<value<<endl;\n        if(targetSum - value == 0 && (!root->left && !root->right)){\n            ans = ans or 1;\n        }\n        \n        if(root->left){\n            getPathSum(root->left, targetSum - value, ans);\n        }\n        if(root->right){\n            getPathSum(root->right, targetSum - value, ans);\n        }\n    }\n    \n    bool hasPathSum(TreeNode* root, int targetSum) {\n        if(root == NULL) return false;\n        bool ans = false;\n        getPathSum(root, targetSum, ans);\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum","has_notes":false,"notes":"","topic_tags":[]}