{"id":729775933,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1656039381,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/729775933/","is_pending":"Not Pending","title":"Construct Target Array With Multiple Sums","memory":"N/A","code":"class Solution {\npublic:\n    priority_queue <int, vector<int>, greater<int> >tList, values;\n    bool isPossible(vector<int>& target) {\n        int n = target.size();\n        int cSum = 0, sum = 0;\n        for(int i=0; i<n; i++){\n            tList.push(target[i]);\n            values.push(1);\n            cSum++;\n            sum += target[i];\n        }\n        while(cSum<sum){\n            int top = values.top();\n            int temp = cSum;\n            values.pop();\n            values.push(cSum);\n            cSum = cSum - top + temp;\n            // cout<<cSum<<endl;\n        }\n        if(cSum == sum){\n            while(values.size() && tList.size() && values.top() == tList.top()){\n                values.pop(); tList.pop();\n            }\n        }\n        return (tList.empty() & values.empty());\n    }\n};","compare_result":"11101111000111000000000000000000000000000000000000000000000000000000000","title_slug":"construct-target-array-with-multiple-sums","has_notes":false,"notes":"","topic_tags":[]}