{"id":726974105,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1655750890,"status":10,"status_display":"Accepted","runtime":"89 ms","url":"/submissions/detail/726974105/","is_pending":"Not Pending","title":"Short Encoding of Words","memory":"73.9 MB","code":"class Solution {\npublic:\n    \n    struct TrieNode{\n        struct TrieNode * next[26];\n    };\n    \n    struct TrieNode * getNode(){\n        struct TrieNode * pNode = new TrieNode;\n        for(int i=0; i<26; i++){\n            pNode->next[i] = NULL;\n        }\n        return pNode;\n    }\n    \n    struct TrieNode * root = getNode();\n    int count = 0;\n    \n    void solve(struct TrieNode * root, int cnt){\n        bool ektao = false;\n        for(int i=0; i<26; i++){\n            if(root->next[i]){\n                ektao = true;\n                solve(root->next[i], cnt+1);\n            }\n        }\n        if(!ektao){\n            count += cnt + 1;\n        }\n    }\n    \n    int minimumLengthEncoding(vector<string>& words) {\n        for(int i=0; i<words.size(); i++){\n            struct TrieNode * curr = root;\n            for(int j=words[i].size()-1; j>=0; j--){\n                int idx = words[i][j] - 'a';\n                if(curr->next[idx]==NULL){\n                    curr->next[idx] = getNode();\n                }\n                curr = curr->next[idx];\n            }\n        }\n        solve(root, 0);\n        return count;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"short-encoding-of-words","has_notes":false,"notes":"","topic_tags":[]}