{"id":789294992,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1662086767,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/789294992/","is_pending":"Not Pending","title":"Average of Levels in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int sumLevel[10001], countLevel[10001];\n    int mxLvl;\n    \n    void solve(TreeNode * root, int lvl){\n        if(!root) return;\n        mxLvl = max(lvl, mxLvl);\n        sumLevel[lvl] += root->val;\n        countLevel[lvl] += 1;\n        solve(root->left, lvl+1);\n        solve(root->right, lvl+1);\n    }\n    \n    vector<double> averageOfLevels(TreeNode* root) {\n        solve(root, 0);\n        vector<double>ans;\n        for(int i=0;i<=mxLvl;i++){\n            ans.push_back((sumLevel[i]*1.0)/countLevel[i]);\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111110000","title_slug":"average-of-levels-in-binary-tree","has_notes":false,"notes":"","topic_tags":[]}