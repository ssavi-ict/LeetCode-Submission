{"id":809158206,"lang":"cpp","lang_name":"C++","time":"2 months, 4 weeks","timestamp":1664211549,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/809158206/","is_pending":"Not Pending","title":"Satisfiability of Equality Equations","memory":"11.4 MB","code":"class Solution {\npublic:\n    \n    int findParent(int node, vector<int>& parent){\n        if(parent[node] == node) return node;\n        parent[node] = findParent(parent[node], parent);\n        return parent[node];\n    }\n    \n    void unionNode(int a, int b, vector<int> & parent){\n        int parent_a = findParent(a, parent);\n        int parent_b = findParent(b, parent);\n        if(parent_a != parent_b){\n            parent[parent_a] = parent_b;\n        }\n    }\n    \n    bool equationsPossible(vector<string>& equations) {\n        vector<int>parent(26);\n        for(int i=0; i<26; i++) parent[i] = i;\n        \n        int n = equations.size();\n        for(int i=0; i<n; i++){\n            if(equations[i][1] == equations[i][2]){\n                int left = equations[i][0] - 'a';\n                int right = equations[i][3] - 'a';\n                unionNode(left, right, parent);\n            }\n        }\n        \n        for(int i=0; i<n; i++){\n            if(equations[i][1] != equations[i][2]){\n                int left = equations[i][0] - 'a';\n                int right = equations[i][3] - 'a';\n                int left_parent = findParent(left, parent);\n                int right_parent = findParent(right, parent);\n                if(left_parent == right_parent) return false;\n            }\n        }\n        return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"satisfiability-of-equality-equations","has_notes":false,"notes":"","topic_tags":[]}