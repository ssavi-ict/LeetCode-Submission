{"id":833466139,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1667148780,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/833466139/","is_pending":"Not Pending","title":"Decode String","memory":"6.7 MB","code":"class Solution {\npublic:\n\n    int to_int(string s){\n        int num = 0;\n        for(int i=0; i<s.size(); i++){\n            num = num * 10 + (s[i] - '0');\n        }\n        return num;\n    }\n\n    string concateNtime(int n, string s){\n        string ret = \"\";\n        while(n--){\n            ret += s;\n        }\n        return ret;\n    }\n\n    string to_str(char ch){\n        string s = \"\";\n        s += ch;\n        return s;\n    }\n\n    string decodeString(string s) {\n        s = \"[\" + s + \"]\";  // [3[a]2[bc]]\n        int n = s.size();   // 11\n        string st = \"\", num = \"\";\n        stack<string>myStack;\n        // cout<<s<<endl;\n\n        for(int i=0; i<n; i++){\n            // cout<<i<<' '<<myStack.size()<<endl;\n            if(s[i]>='a' && s[i]<='z'){\n                st += s[i];\n            }\n            else if(s[i] >='0' && s[i]<='9'){\n                // cout<<\"St \"<<st<<endl;\n                if(st.size() > 0){\n                    myStack.push(st); st.clear();\n                }\n                num += s[i];\n            }\n            else if(s[i] == '['){\n                // cout<<\"Num \"<<num<<endl;\n                if(num.size() > 0){\n                    myStack.push(num); num.clear();\n                }\n                myStack.push(to_str(s[i]));\n            }\n            else{\n                string new_str = st;\n                st.clear();\n                while(myStack.top() != \"[\"){\n                    // cout<<new_str<<\" Top \"<<myStack.top()<<endl;\n                    if(myStack.top()[0] >= '0' && myStack.top()[0] <= '9'){\n                        int concate = to_int(myStack.top());\n                        new_str = concateNtime(concate, new_str);\n                    }\n                    else{\n                        new_str = myStack.top() + new_str;\n                    }\n                    myStack.pop();\n                    // myStack.push(new_str);\n                }\n                if(myStack.top() == \"[\"){\n                    myStack.pop();\n                    if(!myStack.empty()){\n                        int concate = to_int(myStack.top());\n                        new_str = concateNtime(concate, new_str);\n                        myStack.pop();\n                    }\n                }\n                myStack.push(new_str);\n            }\n        }\n        return myStack.top();\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"decode-string","has_notes":false,"notes":"","topic_tags":[]}