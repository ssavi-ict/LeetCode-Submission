{"id":849905295,"lang":"cpp","lang_name":"C++","time":"4Â weeks","timestamp":1669436602,"status":10,"status_display":"Accepted","runtime":"315 ms","url":"/submissions/detail/849905295/","is_pending":"Not Pending","title":"Maximum Profit in Job Scheduling","memory":"50.4 MB","code":"class Solution {\npublic:\n\n    int solve(int pos, int last, vector<pair<int, pair<int, int>>>& myVector, vector<int>&dp){\n        if(pos >= myVector.size()) return 0;\n        if(myVector[pos].first < last) return solve(pos+1, last, myVector, dp);\n        if(dp[pos] != -1) return dp[pos];\n        int ans = 0;\n        ans = max(solve(pos+1, myVector[pos].second.first, myVector, dp)+myVector[pos].second.second, \n                    solve(pos+1, 0, myVector, dp));\n        return dp[pos] = ans;\n    }\n\n    int jobScheduling(vector<int>& startTime, vector<int>& endTime, vector<int>& profit) {\n        vector<pair<int, pair<int, int>>>myVector;\n        for(int i=0; i<startTime.size(); i++){\n            myVector.push_back(make_pair(startTime[i], make_pair(endTime[i], profit[i])));\n        }\n        sort(myVector.begin(), myVector.end());\n        vector<int>dp(startTime.size()+3, -1);\n        return solve(0, 0, myVector, dp);\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"maximum-profit-in-job-scheduling","has_notes":false,"notes":"","topic_tags":[]}