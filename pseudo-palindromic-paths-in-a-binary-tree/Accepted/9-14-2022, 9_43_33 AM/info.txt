{"id":799311609,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1663127013,"status":10,"status_display":"Accepted","runtime":"354 ms","url":"/submissions/detail/799311609/","is_pending":"Not Pending","title":"Pseudo-Palindromic Paths in a Binary Tree","memory":"178.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans;\n    void solvePal(TreeNode * root, int mask){\n        if(!root->left && !root->right){\n            int cnt = 0;\n            int new_mask = (mask ^ (1 << (root->val - 1)));\n            for(int i=1; i<=9; i++){\n                if(new_mask & (1 << (i-1))) cnt++;\n            }\n            if(cnt <= 1){\n                // cout<<new_mask<<endl;\n                ans++;\n            }\n        }\n        if(root->left){\n            solvePal(root->left, (mask ^ (1 << (root->val - 1))));\n        }\n        if(root->right){\n            solvePal(root->right, (mask ^ (1 << (root->val - 1))));\n        }\n    }\n    \n    int pseudoPalindromicPaths (TreeNode* root) {\n        ans = 0;\n        solvePal(root, 0);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"pseudo-palindromic-paths-in-a-binary-tree","has_notes":false,"notes":"","topic_tags":[]}