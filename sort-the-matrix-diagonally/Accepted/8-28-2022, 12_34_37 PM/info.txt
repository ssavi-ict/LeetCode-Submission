{"id":785309150,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1661668477,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/785309150/","is_pending":"Not Pending","title":"Sort the Matrix Diagonally","memory":"9.2 MB","code":"class Solution {\npublic:\n    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {\n        int m = mat.size(), n = mat[0].size();\n        int col = 0;\n        for(int i=m-1; i>=0; i--){\n            int row = (col>=n) ? i+n-1: m-1; int temp_row = row;\n            if(col >= n) col--;\n            \n            vector<int>values;\n            for(int j=col; j>=0; j--){\n                values.push_back(mat[row--][j]);\n            }\n            sort(values.begin(), values.end());\n            int sz = values.size();\n            row = temp_row;\n            for(int j=col; j>=0; j--){\n                mat[row--][j] = values[--sz];\n            }\n            col++;\n        }\n        \n        int row = 0;\n        for(int i=n-1; i>=1; i--){\n            int col = i;\n            vector<int>values;\n            for(int j=0; j<=row; j++){\n                values.push_back(mat[j][col++]);\n            }\n            sort(values.begin(), values.end());\n            int idx = 0;\n            col = i;\n            for(int j=0; j<=row; j++){\n                mat[j][col++] = values[idx++];\n            }\n            \n            row++;\n            if(row>=m) row--;\n        }\n        return mat;\n    }\n};\n\n/*\nm = 3, n = 4\n3 3 1 1\n2 2 1 2\n1 1 1 2\n\n\n\n*/","compare_result":"111111111111111","title_slug":"sort-the-matrix-diagonally","has_notes":false,"notes":"","topic_tags":[]}