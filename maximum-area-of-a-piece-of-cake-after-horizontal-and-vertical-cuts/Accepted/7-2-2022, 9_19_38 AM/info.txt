{"id":736280397,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1656731978,"status":10,"status_display":"Accepted","runtime":"91 ms","url":"/submissions/detail/736280397/","is_pending":"Not Pending","title":"Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts","memory":"32.2 MB","code":"class Solution {\npublic:\n    const int MOD = 1e9 + 7;\n    int findMax(vector<int>& horizontalCuts, int h, int hSize){\n        int maxH = horizontalCuts[0];\n        for(int i=1; i<hSize; i++){\n            maxH = max(maxH, horizontalCuts[i]-horizontalCuts[i-1]);\n        }\n        maxH = max(maxH, h-horizontalCuts[hSize-1]);\n        return maxH;\n    }\n    \n    int maxArea(int h, int w, vector<int>& horizontalCuts, vector<int>& verticalCuts) {\n        int hSize = horizontalCuts.size(), vSize = verticalCuts.size();\n        \n        sort(horizontalCuts.begin(), horizontalCuts.end());\n        sort(verticalCuts.begin(), verticalCuts.end());\n        \n        int maxH = findMax(horizontalCuts, h, hSize);\n        int maxW = findMax(verticalCuts, w, vSize);\n        // cout<<maxH<<' '<<maxW<<endl;\n        \n        long long ans = (long long)maxH % MOD;\n        ans = (ans * (long long)maxW%MOD)%MOD;\n        \n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts","has_notes":false,"notes":"","topic_tags":[]}